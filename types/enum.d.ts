export function getEnumName(
    group: Record<string, number>,
    value: number,
    addNumberValue?: boolean,
    undefinedFallbackValue?: string,
  ): string {}

export const PDU_TYPE_MASK: 240;
export const ASN1_MAX_OBJECT: 1023;
export const ASN1_INSTANCE_BITS: 22;
export const ASN1_MAX_INSTANCE: 4194303;
export const ASN1_MAX_BITSTRING_BYTES: 15;
export const ASN1_ARRAY_ALL: 4294967295;
export const ASN1_NO_PRIORITY: 0;
export const ASN1_MIN_PRIORITY: 1;
export const ASN1_MAX_PRIORITY: 16;
export const ASN1_MAX_APPLICATION_TAG: 16;
export const ASN1_MAX_OBJECT_TYPE: 1024;
export const ASN1_MAX_PROPERTY_ID: 4194303;
export const BVLL_TYPE_BACNET_IP: 129;
export const BVLC_HEADER_LENGTH: 4;
export namespace ConfirmedServiceChoice {
  let ACKNOWLEDGE_ALARM: number;
  let CONFIRMED_COV_NOTIFICATION: number;
  let CONFIRMED_EVENT_NOTIFICATION: number;
  let GET_ALARM_SUMMARY: number;
  let GET_ENROLLMENT_SUMMARY: number;
  let SUBSCRIBE_COV: number;
  let ATOMIC_READ_FILE: number;
  let ATOMIC_WRITE_FILE: number;
  let ADD_LIST_ELEMENT: number;
  let REMOVE_LIST_ELEMENT: number;
  let CREATE_OBJECT: number;
  let DELETE_OBJECT: number;
  let READ_PROPERTY: number;
  let READ_PROPERTY_MULTIPLE: number;
  let WRITE_PROPERTY: number;
  let WRITE_PROPERTY_MULTIPLE: number;
  let DEVICE_COMMUNICATION_CONTROL: number;
  let CONFIRMED_PRIVATE_TRANSFER: number;
  let CONFIRMED_TEXT_MESSAGE: number;
  let REINITIALIZE_DEVICE: number;
  let VT_OPEN: number;
  let VT_CLOSE: number;
  let VT_DATA: number;
  let READ_RANGE: number;
  let LIFE_SAFETY_OPERATION: number;
  let SUBSCRIBE_COV_PROPERTY: number;
  let GET_EVENT_INFORMATION: number;
  let SUBSCRIBE_COV_PROPERTY_MULTIPLE: number;
  let CONFIRMED_COV_NOTIFICATION_MULTIPLE: number;
}
export const ConfirmedServiceChoiceName: any;
export namespace UnconfirmedServiceChoice {
  let I_AM: number;
  let I_HAVE: number;
  let UNCONFIRMED_COV_NOTIFICATION: number;
  let UNCONFIRMED_EVENT_NOTIFICATION: number;
  let UNCONFIRMED_PRIVATE_TRANSFER: number;
  let UNCONFIRMED_TEXT_MESSAGE: number;
  let TIME_SYNCHRONIZATION: number;
  let WHO_HAS: number;
  let WHO_IS: number;
  let UTC_TIME_SYNCHRONIZATION: number;
  let WRITE_GROUP: number;
  let UNCONFIRMED_COV_NOTIFICATION_MULTIPLE: number;
}
export const UnconfirmedServiceChoiceName: any;
export namespace AbortReason {
  let OTHER: number;
  let BUFFER_OVERFLOW: number;
  let INVALID_APDU_IN_THIS_STATE: number;
  let PREEMPTED_BY_HIGHER_PRIORITY_TASK: number;
  let SEGMENTATION_NOT_SUPPORTED: number;
  let SECURITY_ERROR: number;
  let INSUFFICIENT_SECURITY: number;
  let WINDOW_SIZE_OUT_OF_RANGE: number;
  let APPLICATION_EXCEEDED_REPLY_TIME: number;
  let OUT_OF_RESOURCES: number;
  let TSM_TIMEOUT: number;
  let APDU_TOO_LONG: number;
}
export const AbortReasonName: any;
export namespace RejectReason {
  let OTHER_1: number;
  export { OTHER_1 as OTHER };
  let BUFFER_OVERFLOW_1: number;
  export { BUFFER_OVERFLOW_1 as BUFFER_OVERFLOW };
  export let INCONSISTENT_PARAMETERS: number;
  export let INVALID_PARAMETER_DATA_TYPE: number;
  export let INVALID_TAG: number;
  export let MISSING_REQUIRED_PARAMETER: number;
  export let PARAMETER_OUT_OF_RANGE: number;
  export let TOO_MANY_ARGUMENTS: number;
  export let UNDEFINED_ENUMERATION: number;
  export let UNRECOGNIZED_SERVICE: number;
}
export const RejectReasonName: any;
export namespace ErrorClass {
  let DEVICE: number;
  let OBJECT: number;
  let PROPERTY: number;
  let RESOURCES: number;
  let SECURITY: number;
  let SERVICES: number;
  let VT: number;
  let COMMUNICATION: number;
}
export const ErrorClassName: any;
export namespace ErrorCode {
  export let ABORT_APDU_TOO_LONG: number;
  export let ABORT_APPLICATION_EXCEEDED_REPLY_TIME: number;
  export let ABORT_BUFFER_OVERFLOW: number;
  export let ABORT_INSUFFICIENT_SECURITY: number;
  export let ABORT_INVALID_APDU_IN_THIS_STATE: number;
  export let ABORT_OTHER: number;
  export let ABORT_OUT_OF_RESOURCES: number;
  export let ABORT_PREEMPTED_BY_HIGHER_PRIORITY_TASK: number;
  export let ABORT_PROPRIETARY: number;
  export let ABORT_SECURITY_ERROR: number;
  export let ABORT_SEGMENTATION_NOT_SUPPORTED: number;
  export let ABORT_TSM_TIMEOUT: number;
  export let ABORT_WINDOW_SIZE_OUT_OF_RANGE: number;
  export let ACCESS_DENIED: number;
  export let ADDRESSING_ERROR: number;
  export let BAD_DESTINATION_ADDRESS: number;
  export let BAD_DESTINATION_DEVICE_ID: number;
  export let BAD_SIGNATURE: number;
  export let BAD_SOURCE_ADDRESS: number;
  export let BAD_TIMESTAMP: number;
  export let BUSY: number;
  export let CANNOT_USE_KEY: number;
  export let CANNOT_VERIFY_MESSAGE_ID: number;
  export let CHARACTER_SET_NOT_SUPPORTED: number;
  export let COMMUNICATION_DISABLED: number;
  export let CONFIGURATION_IN_PROGRESS: number;
  export let CORRECT_KEY_REVISION: number;
  export let COV_SUBSCRIPTION_FAILED: number;
  export let DATATYPE_NOT_SUPPORTED: number;
  export let DELETE_FDT_ENTRY_FAILED: number;
  export let DESTINATION_DEVICE_ID_REQUIRED: number;
  export let DEVICE_BUSY: number;
  export let DISTRIBUTE_BROADCAST_FAILED: number;
  export let DUPLICATE_ENTRY: number;
  export let DUPLICATE_MESSAGE: number;
  export let DUPLICATE_NAME: number;
  export let DUPLICATE_OBJECT_ID: number;
  export let DYNAMIC_CREATION_NOT_SUPPORTED: number;
  export let ENCRYPTION_NOT_CONFIGURED: number;
  export let ENCRYPTION_REQUIRED: number;
  export let FILE_ACCESS_DENIED: number;
  export let FILE_FULL: number;
  export let INCONSISTENT_CONFIGURATION: number;
  export let INCONSISTENT_OBJECT_TYPE: number;
  let INCONSISTENT_PARAMETERS_1: number;
  export { INCONSISTENT_PARAMETERS_1 as INCONSISTENT_PARAMETERS };
  export let INCONSISTENT_SELECTION_CRITERION: number;
  export let INCORRECT_KEY: number;
  export let INTERNAL_ERROR: number;
  export let INVALID_ARRAY_INDEX: number;
  export let INVALID_CONFIGURATION_DATA: number;
  export let INVALID_DATA_TYPE: number;
  export let INVALID_EVENT_STATE: number;
  export let INVALID_FILE_ACCESS_METHOD: number;
  export let INVALID_FILE_START_POSITION: number;
  export let INVALID_KEY_DATA: number;
  let INVALID_PARAMETER_DATA_TYPE_1: number;
  export { INVALID_PARAMETER_DATA_TYPE_1 as INVALID_PARAMETER_DATA_TYPE };
  let INVALID_TAG_1: number;
  export { INVALID_TAG_1 as INVALID_TAG };
  export let INVALID_TIMESTAMP: number;
  export let INVALID_VALUE_IN_THIS_STATE: number;
  export let KEY_UPDATE_IN_PROGRESS: number;
  export let LIST_ELEMENT_NOT_FOUND: number;
  export let LOG_BUFFER_FULL: number;
  export let LOGGED_VALUE_PURGED: number;
  export let MALFORMED_MESSAGE: number;
  export let MESSAGE_TOO_LONG: number;
  let MISSING_REQUIRED_PARAMETER_1: number;
  export { MISSING_REQUIRED_PARAMETER_1 as MISSING_REQUIRED_PARAMETER };
  export let NETWORK_DOWN: number;
  export let NO_ALARM_CONFIGURED: number;
  export let NO_OBJECTS_OF_SPECIFIED_TYPE: number;
  export let NO_PROPERTY_SPECIFIED: number;
  export let NO_SPACE_FOR_OBJECT: number;
  export let NO_SPACE_TO_ADD_LIST_ELEMENT: number;
  export let NO_SPACE_TO_WRITE_PROPERTY: number;
  export let NO_VT_SESSIONS_AVAILABLE: number;
  export let NOT_CONFIGURED: number;
  export let NOT_CONFIGURED_FOR_TRIGGERED_LOGGING: number;
  export let NOT_COV_PROPERTY: number;
  export let NOT_KEY_SERVER: number;
  export let NOT_ROUTER_TO_DNET: number;
  export let OBJECT_DELETION_NOT_PERMITTED: number;
  export let OBJECT_IDENTIFIER_ALREADY_EXISTS: number;
  export let OPERATIONAL_PROBLEM: number;
  export let OPTIONAL_FUNCTIONALITY_NOT_SUPPORTED: number;
  let OTHER_2: number;
  export { OTHER_2 as OTHER };
  export let OUT_OF_MEMORY: number;
  let PARAMETER_OUT_OF_RANGE_1: number;
  export { PARAMETER_OUT_OF_RANGE_1 as PARAMETER_OUT_OF_RANGE };
  export let PASSWORD_FAILURE: number;
  export let PROPERTY_IS_NOT_A_LIST: number;
  export let PROPERTY_IS_NOT_AN_ARRAY: number;
  export let READ_ACCESS_DENIED: number;
  export let READ_BDT_FAILED: number;
  export let READ_FDT_FAILED: number;
  export let REGISTER_FOREIGN_DEVICE_FAILED: number;
  export let REJECT_BUFFER_OVERFLOW: number;
  export let REJECT_INCONSISTENT_PARAMETERS: number;
  export let REJECT_INVALID_PARAMETER_DATA_TYPE: number;
  export let REJECT_INVALID_TAG: number;
  export let REJECT_MISSING_REQUIRED_PARAMETER: number;
  export let REJECT_OTHER: number;
  export let REJECT_PARAMETER_OUT_OF_RANGE: number;
  export let REJECT_PROPRIETARY: number;
  export let REJECT_TOO_MANY_ARGUMENTS: number;
  export let REJECT_UNDEFINED_ENUMERATION: number;
  export let REJECT_UNRECOGNIZED_SERVICE: number;
  export let ROUTER_BUSY: number;
  let SECURITY_ERROR_1: number;
  export { SECURITY_ERROR_1 as SECURITY_ERROR };
  export let SECURITY_NOT_CONFIGURED: number;
  export let SERVICE_REQUEST_DENIED: number;
  export let SOURCE_SECURITY_REQUIRED: number;
  export let SUCCESS: number;
  export let TIMEOUT: number;
  export let TOO_MANY_KEYS: number;
  export let UNKNOWN_AUTHENTICATION_TYPE: number;
  export let UNKNOWN_DEVICE: number;
  export let UNKNOWN_FILE_SIZE: number;
  export let UNKNOWN_KEY: number;
  export let UNKNOWN_KEY_REVISION: number;
  export let UNKNOWN_NETWORK_MESSAGE: number;
  export let UNKNOWN_OBJECT: number;
  export let UNKNOWN_PROPERTY: number;
  export let UNKNOWN_ROUTE: number;
  export let UNKNOWN_SOURCE_MESSAGE: number;
  export let UNKNOWN_SUBSCRIPTION: number;
  export let UNKNOWN_VT_CLASS: number;
  export let UNKNOWN_VT_SESSION: number;
  export let UNSUPPORTED_OBJECT_TYPE: number;
  export let VALUE_NOT_INITIALIZED: number;
  export let VALUE_OUT_OF_RANGE: number;
  export let VALUE_TOO_LONG: number;
  export let VT_SESSION_ALREADY_CLOSED: number;
  export let VT_SESSION_TERMINATION_FAILURE: number;
  export let WRITE_ACCESS_DENIED: number;
  export let WRITE_BDT_FAILED: number;
}
export const ErrorCodeName: any;
export namespace AccessAuthenticationFactorDisable {
  let NONE: number;
  let DISABLED: number;
  let DISABLED_LOST: number;
  let DISABLED_STOLEN: number;
  let DISABLED_DAMAGED: number;
  let DISABLED_DESTROYED: number;
}
export const AccessAuthenticationFactorDisableName: any;
export namespace AccessCredentialDisable {
  let NONE_1: number;
  export { NONE_1 as NONE };
  export let DISABLE: number;
  export let DISABLE_MANUAL: number;
  export let DISABLE_LOCKOUT: number;
}
export const AccessCredentialDisableName: any;
export namespace AccessCredentialDisableReason {
  let DISABLED_1: number;
  export { DISABLED_1 as DISABLED };
  export let DISABLED_NEEDS_PROVISIONING: number;
  export let DISABLED_UNASSIGNED: number;
  export let DISABLED_NOT_YET_ACTIVE: number;
  export let DISABLED_EXPIRED: number;
  export let DISABLED_LOCKOUT: number;
  export let DISABLED_MAX_DAYS: number;
  export let DISABLED_MAX_USES: number;
  export let DISABLED_INACTIVITY: number;
  export let DISABLED_MANUAL: number;
}
export const AccessCredentialDisableReasonName: any;
export namespace AccessEvent {
  let NONE_2: number;
  export { NONE_2 as NONE };
  export let GRANTED: number;
  export let MUSTER: number;
  export let PASSBACK_DETECTED: number;
  export let DURESS: number;
  export let TRACE: number;
  export let LOCKOUT_MAX_ATTEMPTS: number;
  export let LOCKOUT_OTHER: number;
  export let LOCKOUT_RELINQUISHED: number;
  export let LOCKED_BY_HIGHER_PRIORITY: number;
  export let OUT_OF_SERVICE: number;
  export let OUT_OF_SERVICE_RELINQUISHED: number;
  export let ACCOMPANIMENT_BY: number;
  export let AUTHENTICATION_FACTOR_READ: number;
  export let AUTHORIZATION_DELAYED: number;
  export let VERIFICATION_REQUIRED: number;
  export let NO_ENTRY_AFTER_GRANTED: number;
  export let DENIED_DENY_ALL: number;
  export let DENIED_UNKNOWN_CREDENTIAL: number;
  export let DENIED_AUTHENTICATION_UNAVAILABLE: number;
  export let DENIED_AUTHENTICATION_FACTOR_TIMEOUT: number;
  export let DENIED_INCORRECT_AUTHENTICATION_FACTOR: number;
  export let DENIED_ZONE_NO_ACCESS_RIGHTS: number;
  export let DENIED_POINT_NO_ACCESS_RIGHTS: number;
  export let DENIED_NO_ACCESS_RIGHTS: number;
  export let DENIED_OUT_OF_TIME_RANGE: number;
  export let DENIED_THREAT_LEVEL: number;
  export let DENIED_PASSBACK: number;
  export let DENIED_UNEXPECTED_LOCATION_USAGE: number;
  export let DENIED_MAX_ATTEMPTS: number;
  export let DENIED_LOWER_OCCUPANCY_LIMIT: number;
  export let DENIED_UPPER_OCCUPANCY_LIMIT: number;
  export let DENIED_AUTHENTICATION_FACTOR_LOST: number;
  export let DENIED_AUTHENTICATION_FACTOR_STOLEN: number;
  export let DENIED_AUTHENTICATION_FACTOR_DAMAGED: number;
  export let DENIED_AUTHENTICATION_FACTOR_DESTROYED: number;
  export let DENIED_AUTHENTICATION_FACTOR_DISABLED: number;
  export let DENIED_AUTHENTICATION_FACTOR_ERROR: number;
  export let DENIED_CREDENTIAL_UNASSIGNED: number;
  export let DENIED_CREDENTIAL_NOT_PROVISIONED: number;
  export let DENIED_CREDENTIAL_NOT_YET_ACTIVE: number;
  export let DENIED_CREDENTIAL_EXPIRED: number;
  export let DENIED_CREDENTIAL_MANUAL_DISABLE: number;
  export let DENIED_CREDENTIAL_LOCKOUT: number;
  export let DENIED_CREDENTIAL_MAX_DAYS: number;
  export let DENIED_CREDENTIAL_MAX_USES: number;
  export let DENIED_CREDENTIAL_INACTIVITY: number;
  export let DENIED_CREDENTIAL_DISABLED: number;
  export let DENIED_NO_ACCOMPANIMENT: number;
  export let DENIED_INCORRECT_ACCOMPANIMENT: number;
  export let DENIED_LOCKOUT: number;
  export let DENIED_VERIFICATION_FAILED: number;
  export let DENIED_VERIFICATION_TIMEOUT: number;
  export let DENIED_OTHER: number;
}
export const AccessEventName: any;
export namespace AccessPassbackMode {
  let PASSBACK_OFF: number;
  let HARD_PASSBACK: number;
  let SOFT_PASSBACK: number;
}
export const AccessPassbackModeName: any;
export namespace AccessUserType {
  let ASSET: number;
  let GROUP: number;
  let PERSON: number;
}
export const AccessUserTypeName: any;
export namespace AccessZoneOccupancyState {
  export let NORMAL: number;
  export let BELOW_LOWER_LIMIT: number;
  export let AT_LOWER_LIMIT: number;
  export let AT_UPPER_LIMIT: number;
  export let ABOVE_UPPER_LIMIT: number;
  let DISABLED_2: number;
  export { DISABLED_2 as DISABLED };
  export let NOT_SUPPORTED: number;
}
export const AccessZoneOccupancyStateName: any;
export namespace Action {
  let DIRECT: number;
  let REVERSE: number;
}
export const ActionName: any;
export namespace AuthenticationFactorType {
  let UNDEFINED: number;
  let ERROR: number;
  let CUSTOM: number;
  let SIMPLE_NUMBER16: number;
  let SIMPLE_NUMBER32: number;
  let SIMPLE_NUMBER56: number;
  let SIMPLE_ALPHA_NUMERIC: number;
  let ABA_TRACK2: number;
  let WIEGAND26: number;
  let WIEGAND37: number;
  let WIEGAND37_FACILITY: number;
  let FACILITY16_CARD32: number;
  let FACILITY32_CARD32: number;
  let FASC_N: number;
  let FASC_N_BCD: number;
  let FASC_N_LARGE: number;
  let FASC_N_LARGE_BCD: number;
  let GSA75: number;
  let CHUID: number;
  let CHUID_FULL: number;
  let GUID: number;
  let CBEFF_A: number;
  let CBEFF_B: number;
  let CBEFF_C: number;
  let USER_PASSWORD: number;
}
export const AuthenticationFactorTypeName: any;
export namespace AuthenticationStatus {
  export let NOT_READY: number;
  export let READY: number;
  let DISABLED_3: number;
  export { DISABLED_3 as DISABLED };
  export let WAITING_FOR_AUTHENTICATION_FACTOR: number;
  export let WAITING_FOR_ACCOMPANIMENT: number;
  export let WAITING_FOR_VERIFICATION: number;
  export let IN_PROGRESS: number;
}
export const AuthenticationStatusName: any;
export namespace AuthorizationExemption {
  let PASSBACK: number;
  let OCCUPANCY_CHECK: number;
  let ACCESS_RIGHTS: number;
  let LOCKOUT: number;
  let DENY: number;
  let VERIFICATION: number;
  let AUTHORIZATION_DELAY: number;
}
export const AuthorizationExemptionName: any;
export namespace AuthorizationMode {
  export let AUTHORIZE: number;
  export let GRANT_ACTIVE: number;
  export let DENY_ALL: number;
  let VERIFICATION_REQUIRED_1: number;
  export { VERIFICATION_REQUIRED_1 as VERIFICATION_REQUIRED };
  let AUTHORIZATION_DELAYED_1: number;
  export { AUTHORIZATION_DELAYED_1 as AUTHORIZATION_DELAYED };
  let NONE_3: number;
  export { NONE_3 as NONE };
}
export const AuthorizationModeName: any;
export namespace BackupState {
  let IDLE: number;
  let PREPARING_FOR_BACKUP: number;
  let PREPARING_FOR_RESTORE: number;
  let PERFORMING_A_BACKUP: number;
  let PERFORMING_A_RESTORE: number;
  let BACKUP_FAILURE: number;
  let RESTORE_FAILURE: number;
}
export const BackupStateName: any;
export namespace BinaryLightingPV {
  let OFF: number;
  let ON: number;
  let WARN: number;
  let WARN_OFF: number;
  let WARN_RELINQUISH: number;
  let STOP: number;
}
export const BinaryLightingPVName: any;
export namespace BinaryPV {
  let INACTIVE: number;
  let ACTIVE: number;
}
export const BinaryPVName: any;
export namespace DeviceStatus {
  let OPERATIONAL: number;
  let OPERATIONAL_READ_ONLY: number;
  let DOWNLOAD_REQUIRED: number;
  let DOWNLOAD_IN_PROGRESS: number;
  let NON_OPERATIONAL: number;
  let BACKUP_IN_PROGRESS: number;
}
export const DeviceStatusName: any;
export namespace DoorAlarmState {
  let NORMAL_1: number;
  export { NORMAL_1 as NORMAL };
  export let ALARM: number;
  export let DOOR_OPEN_TOO_LONG: number;
  export let FORCED_OPEN: number;
  export let TAMPER: number;
  export let DOOR_FAULT: number;
  export let LOCK_DOWN: number;
  export let FREE_ACCESS: number;
  export let EGRESS_OPEN: number;
}
export const DoorAlarmStateName: any;
export namespace DoorSecuredStatus {
  let SECURED: number;
  let UNSECURED: number;
  let UNKNOWN: number;
}
export const DoorSecuredStatusName: any;
export namespace DoorStatus {
  export let CLOSED: number;
  export let OPENED: number;
  let UNKNOWN_1: number;
  export { UNKNOWN_1 as UNKNOWN };
  let DOOR_FAULT_1: number;
  export { DOOR_FAULT_1 as DOOR_FAULT };
  export let UNUSED: number;
  let NONE_4: number;
  export { NONE_4 as NONE };
  export let CLOSING: number;
  export let OPENING: number;
  export let SAFETY_LOCKED: number;
  export let LIMITED_OPENED: number;
}
export const DoorStatusName: any;
export namespace DoorValue {
  let LOCK: number;
  let UNLOCK: number;
  let PULSE_UNLOCK: number;
  let EXTENDED_PULSE_UNLOCK: number;
}
export const DoorValueName: any;
export namespace EngineeringUnits {
  let METERS_PER_SECOND_PER_SECOND: number;
  let SQUARE_METERS: number;
  let SQUARE_CENTIMETERS: number;
  let SQUARE_FEET: number;
  let SQUARE_INCHES: number;
  let CURRENCY1: number;
  let CURRENCY2: number;
  let CURRENCY3: number;
  let CURRENCY4: number;
  let CURRENCY5: number;
  let CURRENCY6: number;
  let CURRENCY7: number;
  let CURRENCY8: number;
  let CURRENCY9: number;
  let CURRENCY10: number;
  let MILLIAMPERES: number;
  let AMPERES: number;
  let AMPERES_PER_METER: number;
  let AMPERES_PER_SQUARE_METER: number;
  let AMPERE_SQUARE_METERS: number;
  let DECIBELS: number;
  let DECIBELS_MILLIVOLT: number;
  let DECIBELS_VOLT: number;
  let FARADS: number;
  let HENRYS: number;
  let OHMS: number;
  let OHM_METER_SQUARED_PER_METER: number;
  let OHM_METERS: number;
  let MILLIOHMS: number;
  let KILOHMS: number;
  let MEGOHMS: number;
  let MICROSIEMENS: number;
  let MILLISIEMENS: number;
  let SIEMENS: number;
  let SIEMENS_PER_METER: number;
  let TESLAS: number;
  let VOLTS: number;
  let MILLIVOLTS: number;
  let KILOVOLTS: number;
  let MEGAVOLTS: number;
  let VOLT_AMPERES: number;
  let KILOVOLT_AMPERES: number;
  let MEGAVOLT_AMPERES: number;
  let VOLT_AMPERES_REACTIVE: number;
  let KILOVOLT_AMPERES_REACTIVE: number;
  let MEGAVOLT_AMPERES_REACTIVE: number;
  let VOLTS_PER_DEGREE_KELVIN: number;
  let VOLTS_PER_METER: number;
  let DEGREES_PHASE: number;
  let POWER_FACTOR: number;
  let WEBERS: number;
  let AMPERE_SECONDS: number;
  let VOLT_AMPERE_HOURS: number;
  let KILOVOLT_AMPERE_HOURS: number;
  let MEGAVOLT_AMPERE_HOURS: number;
  let VOLT_AMPERE_HOURS_REACTIVE: number;
  let KILOVOLT_AMPERE_HOURS_REACTIVE: number;
  let MEGAVOLT_AMPERE_HOURS_REACTIVE: number;
  let VOLT_SQUARE_HOURS: number;
  let AMPERE_SQUARE_HOURS: number;
  let JOULES: number;
  let KILOJOULES: number;
  let KILOJOULES_PER_KILOGRAM: number;
  let MEGAJOULES: number;
  let WATT_HOURS: number;
  let KILOWATT_HOURS: number;
  let MEGAWATT_HOURS: number;
  let WATT_HOURS_REACTIVE: number;
  let KILOWATT_HOURS_REACTIVE: number;
  let MEGAWATT_HOURS_REACTIVE: number;
  let BTUS: number;
  let KILO_BTUS: number;
  let MEGA_BTUS: number;
  let THERMS: number;
  let TON_HOURS: number;
  let JOULES_PER_KILOGRAM_DRY_AIR: number;
  let KILOJOULES_PER_KILOGRAM_DRY_AIR: number;
  let MEGAJOULES_PER_KILOGRAM_DRY_AIR: number;
  let BTUS_PER_POUND_DRY_AIR: number;
  let BTUS_PER_POUND: number;
  let JOULES_PER_DEGREE_KELVIN: number;
  let KILOJOULES_PER_DEGREE_KELVIN: number;
  let MEGAJOULES_PER_DEGREE_KELVIN: number;
  let JOULES_PER_KILOGRAM_DEGREE_KELVIN: number;
  let NEWTON: number;
  let CYCLES_PER_HOUR: number;
  let CYCLES_PER_MINUTE: number;
  let HERTZ: number;
  let KILOHERTZ: number;
  let MEGAHERTZ: number;
  let PER_HOUR: number;
  let GRAMS_OF_WATER_PER_KILOGRAM_DRY_AIR: number;
  let PERCENT_RELATIVE_HUMIDITY: number;
  let MICROMETERS: number;
  let MILLIMETERS: number;
  let CENTIMETERS: number;
  let KILOMETERS: number;
  let METERS: number;
  let INCHES: number;
  let FEET: number;
  let CANDELAS: number;
  let CANDELAS_PER_SQUARE_METER: number;
  let WATTS_PER_SQUARE_FOOT: number;
  let WATTS_PER_SQUARE_METER: number;
  let LUMENS: number;
  let LUXES: number;
  let FOOT_CANDLES: number;
  let MILLIGRAMS: number;
  let GRAMS: number;
  let KILOGRAMS: number;
  let POUNDS_MASS: number;
  let TONS: number;
  let GRAMS_PER_SECOND: number;
  let GRAMS_PER_MINUTE: number;
  let KILOGRAMS_PER_SECOND: number;
  let KILOGRAMS_PER_MINUTE: number;
  let KILOGRAMS_PER_HOUR: number;
  let POUNDS_MASS_PER_SECOND: number;
  let POUNDS_MASS_PER_MINUTE: number;
  let POUNDS_MASS_PER_HOUR: number;
  let TONS_PER_HOUR: number;
  let MILLIWATTS: number;
  let WATTS: number;
  let KILOWATTS: number;
  let MEGAWATTS: number;
  let BTUS_PER_HOUR: number;
  let KILO_BTUS_PER_HOUR: number;
  let JOULE_PER_HOURS: number;
  let HORSEPOWER: number;
  let TONS_REFRIGERATION: number;
  let PASCALS: number;
  let HECTOPASCALS: number;
  let KILOPASCALS: number;
  let MILLIBARS: number;
  let BARS: number;
  let POUNDS_FORCE_PER_SQUARE_INCH: number;
  let MILLIMETERS_OF_WATER: number;
  let CENTIMETERS_OF_WATER: number;
  let INCHES_OF_WATER: number;
  let MILLIMETERS_OF_MERCURY: number;
  let CENTIMETERS_OF_MERCURY: number;
  let INCHES_OF_MERCURY: number;
  let DEGREES_CELSIUS: number;
  let DEGREES_KELVIN: number;
  let DEGREES_KELVIN_PER_HOUR: number;
  let DEGREES_KELVIN_PER_MINUTE: number;
  let DEGREES_FAHRENHEIT: number;
  let DEGREE_DAYS_CELSIUS: number;
  let DEGREE_DAYS_FAHRENHEIT: number;
  let DELTA_DEGREES_FAHRENHEIT: number;
  let DELTA_DEGREES_KELVIN: number;
  let YEARS: number;
  let MONTHS: number;
  let WEEKS: number;
  let DAYS: number;
  let HOURS: number;
  let MINUTES: number;
  let SECONDS: number;
  let HUNDREDTHS_SECONDS: number;
  let MILLISECONDS: number;
  let NEWTON_METERS: number;
  let MILLIMETERS_PER_SECOND: number;
  let MILLIMETERS_PER_MINUTE: number;
  let METERS_PER_SECOND: number;
  let METERS_PER_MINUTE: number;
  let METERS_PER_HOUR: number;
  let KILOMETERS_PER_HOUR: number;
  let FEET_PER_SECOND: number;
  let FEET_PER_MINUTE: number;
  let MILES_PER_HOUR: number;
  let CUBIC_FEET: number;
  let CUBIC_METERS: number;
  let IMPERIAL_GALLONS: number;
  let MILLILITERS: number;
  let LITERS: number;
  let US_GALLONS: number;
  let CUBIC_FEET_PER_SECOND: number;
  let CUBIC_FEET_PER_MINUTE: number;
  let MILLION_STANDARD_CUBIC_FEET_PER_MINUTE: number;
  let CUBIC_FEET_PER_HOUR: number;
  let CUBIC_FEET_PER_DAY: number;
  let STANDARD_CUBIC_FEET_PER_DAY: number;
  let MILLION_STANDARD_CUBIC_FEET_PER_DAY: number;
  let THOUSAND_CUBIC_FEET_PER_DAY: number;
  let THOUSAND_STANDARD_CUBIC_FEET_PER_DAY: number;
  let POUNDS_MASS_PER_DAY: number;
  let CUBIC_METERS_PER_SECOND: number;
  let CUBIC_METERS_PER_MINUTE: number;
  let CUBIC_METERS_PER_HOUR: number;
  let CUBIC_METERS_PER_DAY: number;
  let IMPERIAL_GALLONS_PER_MINUTE: number;
  let MILLILITERS_PER_SECOND: number;
  let LITERS_PER_SECOND: number;
  let LITERS_PER_MINUTE: number;
  let LITERS_PER_HOUR: number;
  let US_GALLONS_PER_MINUTE: number;
  let US_GALLONS_PER_HOUR: number;
  let DEGREES_ANGULAR: number;
  let DEGREES_CELSIUS_PER_HOUR: number;
  let DEGREES_CELSIUS_PER_MINUTE: number;
  let DEGREES_FAHRENHEIT_PER_HOUR: number;
  let DEGREES_FAHRENHEIT_PER_MINUTE: number;
  let JOULE_SECONDS: number;
  let KILOGRAMS_PER_CUBIC_METER: number;
  let KILOWATT_HOURS_PER_SQUARE_METER: number;
  let KILOWATT_HOURS_PER_SQUARE_FOOT: number;
  let WATT_HOURS_PER_CUBIC_METER: number;
  let JOULES_PER_CUBIC_METER: number;
  let MEGAJOULES_PER_SQUARE_METER: number;
  let MEGAJOULES_PER_SQUARE_FOOT: number;
  let MOLE_PERCENT: number;
  let NO_UNITS: number;
  let NEWTON_SECONDS: number;
  let NEWTONS_PER_METER: number;
  let PARTS_PER_MILLION: number;
  let PARTS_PER_BILLION: number;
  let PASCAL_SECONDS: number;
  let PERCENT: number;
  let PERCENT_OBSCURATION_PER_FOOT: number;
  let PERCENT_OBSCURATION_PER_METER: number;
  let PERCENT_PER_SECOND: number;
  let PER_MINUTE: number;
  let PER_SECOND: number;
  let PSI_PER_DEGREE_FAHRENHEIT: number;
  let RADIANS: number;
  let RADIANS_PER_SECOND: number;
  let REVOLUTIONS_PER_MINUTE: number;
  let SQUARE_METERS_PER_NEWTON: number;
  let WATTS_PER_METER_PER_DEGREE_KELVIN: number;
  let WATTS_PER_SQUARE_METER_DEGREE_KELVIN: number;
  let PER_MILLE: number;
  let GRAMS_PER_GRAM: number;
  let KILOGRAMS_PER_KILOGRAM: number;
  let GRAMS_PER_KILOGRAM: number;
  let MILLIGRAMS_PER_GRAM: number;
  let MILLIGRAMS_PER_KILOGRAM: number;
  let GRAMS_PER_MILLILITER: number;
  let GRAMS_PER_LITER: number;
  let MILLIGRAMS_PER_LITER: number;
  let MICROGRAMS_PER_LITER: number;
  let GRAMS_PER_CUBIC_METER: number;
  let MILLIGRAMS_PER_CUBIC_METER: number;
  let MICROGRAMS_PER_CUBIC_METER: number;
  let NANOGRAMS_PER_CUBIC_METER: number;
  let GRAMS_PER_CUBIC_CENTIMETER: number;
  let BECQUERELS: number;
  let KILOBECQUERELS: number;
  let MEGABECQUERELS: number;
  let GRAY: number;
  let MILLIGRAY: number;
  let MICROGRAY: number;
  let SIEVERTS: number;
  let MILLISIEVERTS: number;
  let MICROSIEVERTS: number;
  let MICROSIEVERTS_PER_HOUR: number;
  let MILLIREMS: number;
  let MILLIREMS_PER_HOUR: number;
  let DECIBELS_A: number;
  let NEPHELOMETRIC_TURBIDITY_UNIT: number;
  let PH: number;
  let GRAMS_PER_SQUARE_METER: number;
  let MINUTES_PER_DEGREE_KELVIN: number;
}
export const EngineeringUnitsName: any;
export namespace EscalatorFault {
  let CONTROLLER_FAULT: number;
  let DRIVE_AND_MOTOR_FAULT: number;
  let MECHANICAL_COMPONENT_FAULT: number;
  let OVERSPEED_FAULT: number;
  let POWER_SUPPLY_FAULT: number;
  let SAFETY_DEVICE_FAULT: number;
  let CONTROLLER_SUPPLY_FAULT: number;
  let DRIVE_TEMPERATURE_EXCEEDED: number;
  let COMB_PLATE_FAULT: number;
}
export const EscalatorFaultName: any;
export namespace EscalatorMode {
  let UNKNOWN_2: number;
  export { UNKNOWN_2 as UNKNOWN };
  let STOP_1: number;
  export { STOP_1 as STOP };
  export let UP: number;
  export let DOWN: number;
  export let INSPECTION: number;
  let OUT_OF_SERVICE_1: number;
  export { OUT_OF_SERVICE_1 as OUT_OF_SERVICE };
}
export const EscalatorModeName: any;
export namespace EscalatorOperationDirection {
  let UNKNOWN_3: number;
  export { UNKNOWN_3 as UNKNOWN };
  export let STOPPED: number;
  export let UP_RATED_SPEED: number;
  export let UP_REDUCED_SPEED: number;
  export let DOWN_RATED_SPEED: number;
  export let DOWN_REDUCED_SPEED: number;
}
export const EscalatorOperationDirectionName: any;
export namespace EventState {
  let NORMAL_2: number;
  export { NORMAL_2 as NORMAL };
  export let FAULT: number;
  export let OFFNORMAL: number;
  export let HIGH_LIMIT: number;
  export let LOW_LIMIT: number;
  export let LIFE_SAFETY_ALARM: number;
}
export const EventStateName: any;
export namespace EventType {
  export let CHANGE_OF_BITSTRING: number;
  export let CHANGE_OF_STATE: number;
  export let CHANGE_OF_VALUE: number;
  export let COMMAND_FAILURE: number;
  export let FLOATING_LIMIT: number;
  export let OUT_OF_RANGE: number;
  export let COMPLEX_EVENT_TYPE: number;
  export let CHANGE_OF_LIFE_SAFETY: number;
  export let EXTENDED: number;
  export let BUFFER_READY: number;
  export let UNSIGNED_RANGE: number;
  export let ACCESS_EVENT: number;
  export let DOUBLE_OUT_OF_RANGE: number;
  export let SIGNED_OUT_OF_RANGE: number;
  export let UNSIGNED_OUT_OF_RANGE: number;
  export let CHANGE_OF_CHARACTERSTRING: number;
  export let CHANGE_OF_STATUS_FLAGS: number;
  export let CHANGE_OF_RELIABILITY: number;
  let NONE_5: number;
  export { NONE_5 as NONE };
  export let CHANGE_OF_DISCRETE_VALUE: number;
  export let CHANGE_OF_TIMER: number;
}
export const EventTypeName: any;
export namespace FaultType {
  let NONE_6: number;
  export { NONE_6 as NONE };
  export let FAULT_CHARACTERSTRING: number;
  export let FAULT_EXTENDED: number;
  export let FAULT_LIFE_SAFETY: number;
  export let FAULT_STATE: number;
  export let FAULT_STATUS_FLAGS: number;
  export let FAULT_OUT_OF_RANGE: number;
  export let FAULT_LISTED: number;
}
export const FaultTypeName: any;
export namespace FileAccessMethod {
  let RECORD_ACCESS: number;
  let STREAM_ACCESS: number;
}
export const FileAccessMethodName: any;
export namespace IPMode {
  let NORMAL_3: number;
  export { NORMAL_3 as NORMAL };
  export let FOREIGN: number;
  export let BBMD: number;
}
export const IPModeName: any;
export namespace LifeSafetyMode {
  let OFF_1: number;
  export { OFF_1 as OFF };
  let ON_1: number;
  export { ON_1 as ON };
  export let TEST: number;
  export let MANNED: number;
  export let UNMANNED: number;
  export let ARMED: number;
  export let DISARMED: number;
  export let PREARMED: number;
  export let SLOW: number;
  export let FAST: number;
  export let DISCONNECTED: number;
  export let ENABLED: number;
  let DISABLED_4: number;
  export { DISABLED_4 as DISABLED };
  export let AUTOMATIC_RELEASE_DISABLED: number;
  export let DEFAULT: number;
}
export const LifeSafetyModeName: any;
export namespace LifeSafetyOperation {
  let NONE_7: number;
  export { NONE_7 as NONE };
  export let SILENCE: number;
  export let SILENCE_AUDIBLE: number;
  export let SILENCE_VISUAL: number;
  export let RESET: number;
  export let RESET_ALARM: number;
  export let RESET_FAULT: number;
  export let UNSILENCE: number;
  export let UNSILENCE_AUDIBLE: number;
  export let UNSILENCE_VISUAL: number;
}
export const LifeSafetyOperationName: any;
export namespace LifeSafetyState {
  export let QUIET: number;
  export let PRE_ALARM: number;
  let ALARM_1: number;
  export { ALARM_1 as ALARM };
  let FAULT_1: number;
  export { FAULT_1 as FAULT };
  export let FAULT_PRE_ALARM: number;
  export let FAULT_ALARM: number;
  let NOT_READY_1: number;
  export { NOT_READY_1 as NOT_READY };
  let ACTIVE_1: number;
  export { ACTIVE_1 as ACTIVE };
  let TAMPER_1: number;
  export { TAMPER_1 as TAMPER };
  export let TEST_ALARM: number;
  export let TEST_ACTIVE: number;
  export let TEST_FAULT: number;
  export let TEST_FAULT_ALARM: number;
  export let HOLDUP: number;
  let DURESS_1: number;
  export { DURESS_1 as DURESS };
  export let TAMPER_ALARM: number;
  export let ABNORMAL: number;
  export let EMERGENCY_POWER: number;
  export let DELAYED: number;
  export let BLOCKED: number;
  export let LOCAL_ALARM: number;
  export let GENERAL_ALARM: number;
  export let SUPERVISORY: number;
  export let TEST_SUPERVISORY: number;
}
export const LifeSafetyStateName: any;
export namespace LiftCarDirection {
  let UNKNOWN_4: number;
  export { UNKNOWN_4 as UNKNOWN };
  let NONE_8: number;
  export { NONE_8 as NONE };
  let STOPPED_1: number;
  export { STOPPED_1 as STOPPED };
  let UP_1: number;
  export { UP_1 as UP };
  let DOWN_1: number;
  export { DOWN_1 as DOWN };
  export let UP_AND_DOWN: number;
}
export const LiftCarDirectionName: any;
export namespace LiftCarDoorCommand {
  let NONE_9: number;
  export { NONE_9 as NONE };
  export let OPEN: number;
  export let CLOSE: number;
}
export const LiftCarDoorCommandName: any;
export namespace LiftCarDriveStatus {
  let UNKNOWN_5: number;
  export { UNKNOWN_5 as UNKNOWN };
  export let STATIONARY: number;
  export let BRAKING: number;
  export let ACCELERATE: number;
  export let DECELERATE: number;
  export let RATED_SPEED: number;
  export let SINGLE_FLOOR_JUMP: number;
  export let TWO_FLOOR_JUMP: number;
  export let THREE_FLOOR_JUMP: number;
  export let MULTI_FLOOR_JUMP: number;
}
export const LiftCarDriveStatusName: any;
export namespace LiftCarMode {
  let UNKNOWN_6: number;
  export { UNKNOWN_6 as UNKNOWN };
  let NORMAL_4: number;
  export { NORMAL_4 as NORMAL };
  export let VIP: number;
  export let HOMING: number;
  export let PARKING: number;
  export let ATTENDANT_CONTROL: number;
  export let FIREFIGHTER_CONTROL: number;
  let EMERGENCY_POWER_1: number;
  export { EMERGENCY_POWER_1 as EMERGENCY_POWER };
  let INSPECTION_1: number;
  export { INSPECTION_1 as INSPECTION };
  export let CABINET_RECALL: number;
  export let EARTHQUAKE_OPERATION: number;
  export let FIRE_OPERATION: number;
  let OUT_OF_SERVICE_2: number;
  export { OUT_OF_SERVICE_2 as OUT_OF_SERVICE };
  export let OCCUPANT_EVACUATION: number;
}
export const LiftCarModeName: any;
export namespace LiftFault {
  let CONTROLLER_FAULT_1: number;
  export { CONTROLLER_FAULT_1 as CONTROLLER_FAULT };
  let DRIVE_AND_MOTOR_FAULT_1: number;
  export { DRIVE_AND_MOTOR_FAULT_1 as DRIVE_AND_MOTOR_FAULT };
  export let GOVERNOR_AND_SAFETY_GEAR_FAULT: number;
  export let LIFT_SHAFT_DEVICE_FAULT: number;
  let POWER_SUPPLY_FAULT_1: number;
  export { POWER_SUPPLY_FAULT_1 as POWER_SUPPLY_FAULT };
  export let SAFETY_INTERLOCK_FAULT: number;
  export let DOOR_CLOSING_FAULT: number;
  export let DOOR_OPENING_FAULT: number;
  export let CAR_STOPPED_OUTSIDE_LANDING_ZONE: number;
  export let CALL_BUTTON_STUCK: number;
  export let START_FAILURE: number;
  let CONTROLLER_SUPPLY_FAULT_1: number;
  export { CONTROLLER_SUPPLY_FAULT_1 as CONTROLLER_SUPPLY_FAULT };
  export let SELF_TEST_FAILURE: number;
  export let RUNTIME_LIMIT_EXCEEDED: number;
  export let POSITION_LOST: number;
  let DRIVE_TEMPERATURE_EXCEEDED_1: number;
  export { DRIVE_TEMPERATURE_EXCEEDED_1 as DRIVE_TEMPERATURE_EXCEEDED };
  export let LOAD_MEASUREMENT_FAULT: number;
}
export const LiftFaultName: any;
export namespace LiftGroupMode {
  let UNKNOWN_7: number;
  export { UNKNOWN_7 as UNKNOWN };
  let NORMAL_5: number;
  export { NORMAL_5 as NORMAL };
  export let DOWN_PEAK: number;
  export let TWO_WAY: number;
  export let FOUR_WAY: number;
  let EMERGENCY_POWER_2: number;
  export { EMERGENCY_POWER_2 as EMERGENCY_POWER };
  export let UP_PEAK: number;
}
export const LiftGroupModeName: any;
export namespace LightingInProgress {
  let IDLE_1: number;
  export { IDLE_1 as IDLE };
  export let FADE_ACTIVE: number;
  export let RAMP_ACTIVE: number;
  export let NOT_CONTROLLED: number;
  let OTHER_3: number;
  export { OTHER_3 as OTHER };
}
export const LightingInProgressName: any;
export namespace LightingOperation {
  let NONE_10: number;
  export { NONE_10 as NONE };
  export let FADE_TO: number;
  export let RAMP_TO: number;
  export let STEP_UP: number;
  export let STEP_DOWN: number;
  export let STEP_ON: number;
  export let STEP_OFF: number;
  let WARN_1: number;
  export { WARN_1 as WARN };
  let WARN_OFF_1: number;
  export { WARN_OFF_1 as WARN_OFF };
  let WARN_RELINQUISH_1: number;
  export { WARN_RELINQUISH_1 as WARN_RELINQUISH };
  let STOP_2: number;
  export { STOP_2 as STOP };
}
export const LightingOperationName: any;
export namespace LightingTransition {
  let NONE_11: number;
  export { NONE_11 as NONE };
  export let FADE: number;
  export let RAMP: number;
}
export const LightingTransitionName: any;
export namespace LockStatus {
  export let LOCKED: number;
  export let UNLOCKED: number;
  export let LOCK_FAULT: number;
  let UNUSED_1: number;
  export { UNUSED_1 as UNUSED };
  let UNKNOWN_8: number;
  export { UNKNOWN_8 as UNKNOWN };
}
export const LockStatusName: any;
export namespace LoggingType {
  let POLLED: number;
  let COV: number;
  let TRIGGERED: number;
}
export const LoggingTypeName: any;
export namespace Maintenance {
  let NONE_12: number;
  export { NONE_12 as NONE };
  export let PERIODIC_TEST: number;
  export let NEED_SERVICE_OPERATIONAL: number;
  export let NEED_SERVICE_INOPERATIVE: number;
}
export const MaintenanceName: any;
export namespace NetworkNumberQuality {
  let UNKNOWN_9: number;
  export { UNKNOWN_9 as UNKNOWN };
  export let LEARNED: number;
  export let LEARNED_CONFIGURED: number;
  export let CONFIGURED: number;
}
export const NetworkNumberQualityName: any;
export namespace NetworkPortCommand {
  let IDLE_2: number;
  export { IDLE_2 as IDLE };
  export let DISCARD_CHANGES: number;
  export let RENEW_FD_REGISTRATION: number;
  export let RESTART_SLAVE_DISCOVERY: number;
  export let RENEW_DHCP: number;
  export let RESTART_AUTONEGOTIATION: number;
  export let DISCONNECT: number;
  export let RESTART_PORT: number;
}
export const NetworkPortCommandName: any;
export namespace NetworkType {
  let ETHERNET: number;
  let ARCNET: number;
  let MSTP: number;
  let PTP: number;
  let LONTALK: number;
  let IPV4: number;
  let ZIGBEE: number;
  let VIRTUAL: number;
  let IPV6: number;
  let SERIAL: number;
}
export const NetworkTypeName: any;
export namespace NodeType {
  let UNKNOWN_10: number;
  export { UNKNOWN_10 as UNKNOWN };
  export let SYSTEM: number;
  export let NETWORK: number;
  let DEVICE_1: number;
  export { DEVICE_1 as DEVICE };
  export let ORGANIZATIONAL: number;
  export let AREA: number;
  export let EQUIPMENT: number;
  export let POINT: number;
  export let COLLECTION: number;
  let PROPERTY_1: number;
  export { PROPERTY_1 as PROPERTY };
  export let FUNCTIONAL: number;
  let OTHER_4: number;
  export { OTHER_4 as OTHER };
  export let SUBSYSTEM: number;
  export let BUILDING: number;
  export let FLOOR: number;
  export let SECTION: number;
  export let MODULE: number;
  export let TREE: number;
  export let MEMBER: number;
  export let PROTOCOL: number;
  export let ROOM: number;
  export let ZONE: number;
}
export const NodeTypeName: any;
export namespace NotifyType {
  let ALARM_2: number;
  export { ALARM_2 as ALARM };
  export let EVENT: number;
  export let ACK_NOTIFICATION: number;
}
export const NotifyTypeName: any;
export namespace ObjectType {
  export let ACCESS_CREDENTIAL: number;
  export let ACCESS_DOOR: number;
  export let ACCESS_POINT: number;
  let ACCESS_RIGHTS_1: number;
  export { ACCESS_RIGHTS_1 as ACCESS_RIGHTS };
  export let ACCESS_USER: number;
  export let ACCESS_ZONE: number;
  export let ACCUMULATOR: number;
  export let ALERT_ENROLLMENT: number;
  export let ANALOG_INPUT: number;
  export let ANALOG_OUTPUT: number;
  export let ANALOG_VALUE: number;
  export let AVERAGING: number;
  export let BINARY_INPUT: number;
  export let BINARY_LIGHTING_OUTPUT: number;
  export let BINARY_OUTPUT: number;
  export let BINARY_VALUE: number;
  export let BITSTRING_VALUE: number;
  export let CALENDAR: number;
  export let CHANNEL: number;
  export let CHARACTERSTRING_VALUE: number;
  export let COMMAND: number;
  export let CREDENTIAL_DATA_INPUT: number;
  export let DATEPATTERN_VALUE: number;
  export let DATE_VALUE: number;
  export let DATETIMEPATTERN_VALUE: number;
  export let DATETIME_VALUE: number;
  let DEVICE_2: number;
  export { DEVICE_2 as DEVICE };
  export let ELEVATOR_GROUP: number;
  export let ESCALATOR: number;
  export let EVENT_ENROLLMENT: number;
  export let EVENT_LOG: number;
  export let FILE: number;
  export let GLOBAL_GROUP: number;
  let GROUP_1: number;
  export { GROUP_1 as GROUP };
  export let INTEGER_VALUE: number;
  export let LARGE_ANALOG_VALUE: number;
  export let LIFE_SAFETY_POINT: number;
  export let LIFE_SAFETY_ZONE: number;
  export let LIFT: number;
  export let LIGHTING_OUTPUT: number;
  export let LOAD_CONTROL: number;
  export let LOOP: number;
  export let MULTI_STATE_INPUT: number;
  export let MULTI_STATE_OUTPUT: number;
  export let MULTI_STATE_VALUE: number;
  export let NETWORK_PORT: number;
  export let NETWORK_SECURITY: number;
  export let NOTIFICATION_CLASS: number;
  export let NOTIFICATION_FORWARDER: number;
  export let OCTETSTRING_VALUE: number;
  export let POSITIVE_INTEGER_VALUE: number;
  export let PROGRAM: number;
  export let PULSE_CONVERTER: number;
  export let SCHEDULE: number;
  export let STRUCTURED_VIEW: number;
  export let TIMEPATTERN_VALUE: number;
  export let TIME_VALUE: number;
  export let TIMER: number;
  export let TREND_LOG: number;
  export let TREND_LOG_MULTIPLE: number;
}
export const ObjectTypeName: any;
export namespace Polarity {
  let NORMAL_6: number;
  export { NORMAL_6 as NORMAL };
  let REVERSE_1: number;
  export { REVERSE_1 as REVERSE };
}
export const PolarityName: any;
export namespace ProgramError {
  let NORMAL_7: number;
  export { NORMAL_7 as NORMAL };
  export let LOAD_FAILED: number;
  export let INTERNAL: number;
  let PROGRAM_1: number;
  export { PROGRAM_1 as PROGRAM };
  let OTHER_5: number;
  export { OTHER_5 as OTHER };
}
export const ProgramErrorName: any;
export namespace ProgramRequest {
  let READY_1: number;
  export { READY_1 as READY };
  export let LOAD: number;
  export let RUN: number;
  export let HALT: number;
  export let RESTART: number;
  export let UNLOAD: number;
}
export const ProgramRequestName: any;
export namespace ProgramState {
  let IDLE_3: number;
  export { IDLE_3 as IDLE };
  export let LOADING: number;
  export let RUNNING: number;
  export let WAITING: number;
  export let HALTED: number;
  export let UNLOADING: number;
}
export const ProgramStateName: any;
export namespace PropertyIdentifier {
  export let ABSENTEE_LIMIT: number;
  export let ACCEPTED_MODES: number;
  export let ACCESS_ALARM_EVENTS: number;
  export let ACCESS_DOORS: number;
  let ACCESS_EVENT_1: number;
  export { ACCESS_EVENT_1 as ACCESS_EVENT };
  export let ACCESS_EVENT_AUTHENTICATION_FACTOR: number;
  export let ACCESS_EVENT_CREDENTIAL: number;
  export let ACCESS_EVENT_TAG: number;
  export let ACCESS_EVENT_TIME: number;
  export let ACCESS_TRANSACTION_EVENTS: number;
  export let ACCOMPANIMENT: number;
  export let ACCOMPANIMENT_TIME: number;
  export let ACK_REQUIRED: number;
  export let ACKED_TRANSITIONS: number;
  export let ACTION: number;
  export let ACTION_TEXT: number;
  export let ACTIVATION_TIME: number;
  export let ACTIVE_AUTHENTICATION_POLICY: number;
  export let ACTIVE_COV_MULTIPLE_SUBSCRIPTIONS: number;
  export let ACTIVE_COV_SUBSCRIPTIONS: number;
  export let ACTIVE_TEXT: number;
  export let ACTIVE_VT_SESSIONS: number;
  export let ACTUAL_SHED_LEVEL: number;
  export let ADJUST_VALUE: number;
  export let ALARM_VALUE: number;
  export let ALARM_VALUES: number;
  export let ALIGN_INTERVALS: number;
  export let ALL: number;
  export let ALL_WRITES_SUCCESSFUL: number;
  export let ALLOW_GROUP_DELAY_INHIBIT: number;
  export let APDU_LENGTH: number;
  export let APDU_SEGMENT_TIMEOUT: number;
  export let APDU_TIMEOUT: number;
  export let APPLICATION_SOFTWARE_VERSION: number;
  export let ARCHIVE: number;
  export let ASSIGNED_ACCESS_RIGHTS: number;
  export let ASSIGNED_LANDING_CALLS: number;
  export let ATTEMPTED_SAMPLES: number;
  export let AUTHENTICATION_FACTORS: number;
  export let AUTHENTICATION_POLICY_LIST: number;
  export let AUTHENTICATION_POLICY_NAMES: number;
  export let AUTHENTICATION_STATUS: number;
  export let AUTHORIZATION_EXEMPTIONS: number;
  export let AUTHORIZATION_MODE: number;
  export let AUTO_SLAVE_DISCOVERY: number;
  export let AVERAGE_VALUE: number;
  export let BACKUP_AND_RESTORE_STATE: number;
  export let BACKUP_FAILURE_TIMEOUT: number;
  export let BACKUP_PREPARATION_TIME: number;
  export let BACNET_IP_GLOBAL_ADDRESS: number;
  export let BACNET_IP_MODE: number;
  export let BACNET_IP_MULTICAST_ADDRESS: number;
  export let BACNET_IP_NAT_TRAVERSAL: number;
  export let BACNET_IP_UDP_PORT: number;
  export let BACNET_IPV6_MODE: number;
  export let BACNET_IPV6_UDP_PORT: number;
  export let BACNET_IPV6_MULTICAST_ADDRESS: number;
  export let BBMD_ACCEPT_FD_REGISTRATIONS: number;
  export let BBMD_BROADCAST_DISTRIBUTION_TABLE: number;
  export let BBMD_FOREIGN_DEVICE_TABLE: number;
  export let BELONGS_TO: number;
  export let BIAS: number;
  export let BIT_MASK: number;
  export let BIT_TEXT: number;
  export let BLINK_WARN_ENABLE: number;
  export let BUFFER_SIZE: number;
  export let CAR_ASSIGNED_DIRECTION: number;
  export let CAR_DOOR_COMMAND: number;
  export let CAR_DOOR_STATUS: number;
  export let CAR_DOOR_TEXT: number;
  export let CAR_DOOR_ZONE: number;
  export let CAR_DRIVE_STATUS: number;
  export let CAR_LOAD: number;
  export let CAR_LOAD_UNITS: number;
  export let CAR_MODE: number;
  export let CAR_MOVING_DIRECTION: number;
  export let CAR_POSITION: number;
  export let CHANGE_OF_STATE_COUNT: number;
  export let CHANGE_OF_STATE_TIME: number;
  export let CHANGES_PENDING: number;
  export let CHANNEL_NUMBER: number;
  export let CLIENT_COV_INCREMENT: number;
  let COMMAND_1: number;
  export { COMMAND_1 as COMMAND };
  export let COMMAND_TIME_ARRAY: number;
  export let CONFIGURATION_FILES: number;
  export let CONTROL_GROUPS: number;
  export let CONTROLLED_VARIABLE_REFERENCE: number;
  export let CONTROLLED_VARIABLE_UNITS: number;
  export let CONTROLLED_VARIABLE_VALUE: number;
  export let COUNT: number;
  export let COUNT_BEFORE_CHANGE: number;
  export let COUNT_CHANGE_TIME: number;
  export let COV_INCREMENT: number;
  export let COV_PERIOD: number;
  export let COV_RESUBSCRIPTION_INTERVAL: number;
  export let COVU_PERIOD: number;
  export let COVU_RECIPIENTS: number;
  export let CREDENTIAL_DISABLE: number;
  export let CREDENTIAL_STATUS: number;
  export let CREDENTIALS: number;
  export let CREDENTIALS_IN_ZONE: number;
  export let CURRENT_COMMAND_PRIORITY: number;
  export let DATABASE_REVISION: number;
  export let DATE_LIST: number;
  export let DAYLIGHT_SAVINGS_STATUS: number;
  export let DAYS_REMAINING: number;
  export let DEADBAND: number;
  export let DEFAULT_FADE_TIME: number;
  export let DEFAULT_RAMP_RATE: number;
  export let DEFAULT_STEP_INCREMENT: number;
  export let DEFAULT_SUBORDINATE_RELATIONSHIP: number;
  export let DEFAULT_TIMEOUT: number;
  export let DEPLOYED_PROFILE_LOCATION: number;
  export let DERIVATIVE_CONSTANT: number;
  export let DERIVATIVE_CONSTANT_UNITS: number;
  export let DESCRIPTION: number;
  export let DESCRIPTION_OF_HALT: number;
  export let DEVICE_ADDRESS_BINDING: number;
  export let DEVICE_TYPE: number;
  export let DIRECT_READING: number;
  export let DISTRIBUTION_KEY_REVISION: number;
  export let DO_NOT_HIDE: number;
  export let DOOR_ALARM_STATE: number;
  export let DOOR_EXTENDED_PULSE_TIME: number;
  export let DOOR_MEMBERS: number;
  export let DOOR_OPEN_TOO_LONG_TIME: number;
  export let DOOR_PULSE_TIME: number;
  export let DOOR_STATUS: number;
  export let DOOR_UNLOCK_DELAY_TIME: number;
  export let DUTY_WINDOW: number;
  export let EFFECTIVE_PERIOD: number;
  export let EGRESS_ACTIVE: number;
  export let EGRESS_TIME: number;
  export let ELAPSED_ACTIVE_TIME: number;
  let ELEVATOR_GROUP_1: number;
  export { ELEVATOR_GROUP_1 as ELEVATOR_GROUP };
  export let ENABLE: number;
  export let ENERGY_METER: number;
  export let ENERGY_METER_REF: number;
  export let ENTRY_POINTS: number;
  export let ERROR_LIMIT: number;
  export let ESCALATOR_MODE: number;
  export let EVENT_ALGORITHM_INHIBIT: number;
  export let EVENT_ALGORITHM_INHIBIT_REF: number;
  export let EVENT_DETECTION_ENABLE: number;
  export let EVENT_ENABLE: number;
  export let EVENT_MESSAGE_TEXTS: number;
  export let EVENT_MESSAGE_TEXTS_CONFIG: number;
  export let EVENT_PARAMETERS: number;
  export let EVENT_STATE: number;
  export let EVENT_TIME_STAMPS: number;
  export let EVENT_TYPE: number;
  export let EXCEPTION_SCHEDULE: number;
  export let EXECUTION_DELAY: number;
  export let EXIT_POINTS: number;
  export let EXPECTED_SHED_LEVEL: number;
  export let EXPIRATION_TIME: number;
  export let EXTENDED_TIME_ENABLE: number;
  export let FAILED_ATTEMPT_EVENTS: number;
  export let FAILED_ATTEMPTS: number;
  export let FAILED_ATTEMPTS_TIME: number;
  export let FAULT_HIGH_LIMIT: number;
  export let FAULT_LOW_LIMIT: number;
  export let FAULT_PARAMETERS: number;
  export let FAULT_SIGNALS: number;
  export let FAULT_TYPE: number;
  export let FAULT_VALUES: number;
  export let FD_BBMD_ADDRESS: number;
  export let FD_SUBSCRIPTION_LIFETIME: number;
  export let FEEDBACK_VALUE: number;
  export let FILE_ACCESS_METHOD: number;
  export let FILE_SIZE: number;
  export let FILE_TYPE: number;
  export let FIRMWARE_REVISION: number;
  export let FLOOR_TEXT: number;
  export let FULL_DUTY_BASELINE: number;
  export let GLOBAL_IDENTIFIER: number;
  export let GROUP_ID: number;
  export let GROUP_MEMBER_NAMES: number;
  export let GROUP_MEMBERS: number;
  export let GROUP_MODE: number;
  let HIGH_LIMIT_1: number;
  export { HIGH_LIMIT_1 as HIGH_LIMIT };
  export let HIGHER_DECK: number;
  export let IN_PROCESS: number;
  let IN_PROGRESS_1: number;
  export { IN_PROGRESS_1 as IN_PROGRESS };
  export let INACTIVE_TEXT: number;
  export let INITIAL_TIMEOUT: number;
  export let INPUT_REFERENCE: number;
  export let INSTALLATION_ID: number;
  export let INSTANCE_OF: number;
  export let INSTANTANEOUS_POWER: number;
  export let INTEGRAL_CONSTANT: number;
  export let INTEGRAL_CONSTANT_UNITS: number;
  export let INTERFACE_VALUE: number;
  export let INTERVAL_OFFSET: number;
  export let IP_ADDRESS: number;
  export let IP_DEFAULT_GATEWAY: number;
  export let IP_DHCP_ENABLE: number;
  export let IP_DHCP_LEASE_TIME: number;
  export let IP_DHCP_LEASE_TIME_REMAINING: number;
  export let IP_DHCP_SERVER: number;
  export let IP_DNS_SERVER: number;
  export let IP_SUBNET_MASK: number;
  export let IPV6_ADDRESS: number;
  export let IPV6_AUTO_ADDRESSING_ENABLE: number;
  export let IPV6_DEFAULT_GATEWAY: number;
  export let IPV6_DHCP_LEASE_TIME: number;
  export let IPV6_DHCP_LEASE_TIME_REMAINING: number;
  export let IPV6_DHCP_SERVER: number;
  export let IPV6_DNS_SERVER: number;
  export let IPV6_PREFIX_LENGTH: number;
  export let IPV6_ZONE_INDEX: number;
  export let IS_UTC: number;
  export let KEY_SETS: number;
  export let LANDING_CALL_CONTROL: number;
  export let LANDING_CALLS: number;
  export let LANDING_DOOR_STATUS: number;
  export let LAST_ACCESS_EVENT: number;
  export let LAST_ACCESS_POINT: number;
  export let LAST_COMMAND_TIME: number;
  export let LAST_CREDENTIAL_ADDED: number;
  export let LAST_CREDENTIAL_ADDED_TIME: number;
  export let LAST_CREDENTIAL_REMOVED: number;
  export let LAST_CREDENTIAL_REMOVED_TIME: number;
  export let LAST_KEY_SERVER: number;
  export let LAST_NOTIFY_RECORD: number;
  export let LAST_PRIORITY: number;
  export let LAST_RESTART_REASON: number;
  export let LAST_RESTORE_TIME: number;
  export let LAST_STATE_CHANGE: number;
  export let LAST_USE_TIME: number;
  export let LIFE_SAFETY_ALARM_VALUES: number;
  export let LIGHTING_COMMAND: number;
  export let LIGHTING_COMMAND_DEFAULT_PRIORITY: number;
  export let LIMIT_ENABLE: number;
  export let LIMIT_MONITORING_INTERVAL: number;
  export let LINK_SPEED: number;
  export let LINK_SPEED_AUTONEGOTIATE: number;
  export let LINK_SPEEDS: number;
  export let LIST_OF_GROUP_MEMBERS: number;
  export let LIST_OF_OBJECT_PROPERTY_REFERENCES: number;
  export let LOCAL_DATE: number;
  export let LOCAL_FORWARDING_ONLY: number;
  export let LOCAL_TIME: number;
  export let LOCATION: number;
  export let LOCK_STATUS: number;
  let LOCKOUT_1: number;
  export { LOCKOUT_1 as LOCKOUT };
  export let LOCKOUT_RELINQUISH_TIME: number;
  export let LOG_BUFFER: number;
  export let LOG_DEVICE_OBJECT_PROPERTY: number;
  export let LOG_INTERVAL: number;
  export let LOGGING_OBJECT: number;
  export let LOGGING_RECORD: number;
  export let LOGGING_TYPE: number;
  export let LOW_DIFF_LIMIT: number;
  let LOW_LIMIT_1: number;
  export { LOW_LIMIT_1 as LOW_LIMIT };
  export let LOWER_DECK: number;
  export let MAC_ADDRESS: number;
  export let MACHINE_ROOM_ID: number;
  export let MAINTENANCE_REQUIRED: number;
  export let MAKING_CAR_CALL: number;
  export let MANIPULATED_VARIABLE_REFERENCE: number;
  export let MANUAL_SLAVE_ADDRESS_BINDING: number;
  export let MASKED_ALARM_VALUES: number;
  export let MAX_ACTUAL_VALUE: number;
  export let MAX_APDU_LENGTH_ACCEPTED: number;
  export let MAX_FAILED_ATTEMPTS: number;
  export let MAX_INFO_FRAMES: number;
  export let MAX_MASTER: number;
  export let MAX_PRES_VALUE: number;
  export let MAX_SEGMENTS_ACCEPTED: number;
  export let MAXIMUM_OUTPUT: number;
  export let MAXIMUM_VALUE: number;
  export let MAXIMUM_VALUE_TIMESTAMP: number;
  export let MEMBER_OF: number;
  export let MEMBER_STATUS_FLAGS: number;
  export let MEMBERS: number;
  export let MIN_ACTUAL_VALUE: number;
  export let MIN_PRES_VALUE: number;
  export let MINIMUM_OFF_TIME: number;
  export let MINIMUM_ON_TIME: number;
  export let MINIMUM_OUTPUT: number;
  export let MINIMUM_VALUE: number;
  export let MINIMUM_VALUE_TIMESTAMP: number;
  export let MODE: number;
  export let MODEL_NAME: number;
  export let MODIFICATION_DATE: number;
  export let MUSTER_POINT: number;
  export let NEGATIVE_ACCESS_RULES: number;
  export let NETWORK_ACCESS_SECURITY_POLICIES: number;
  export let NETWORK_INTERFACE_NAME: number;
  export let NETWORK_NUMBER: number;
  export let NETWORK_NUMBER_QUALITY: number;
  export let NETWORK_TYPE: number;
  export let NEXT_STOPPING_FLOOR: number;
  export let NODE_SUBTYPE: number;
  export let NODE_TYPE: number;
  let NOTIFICATION_CLASS_1: number;
  export { NOTIFICATION_CLASS_1 as NOTIFICATION_CLASS };
  export let NOTIFICATION_THRESHOLD: number;
  export let NOTIFY_TYPE: number;
  export let NUMBER_OF_APDU_RETRIES: number;
  export let NUMBER_OF_AUTHENTICATION_POLICIES: number;
  export let NUMBER_OF_STATES: number;
  export let OBJECT_IDENTIFIER: number;
  export let OBJECT_LIST: number;
  export let OBJECT_NAME: number;
  export let OBJECT_PROPERTY_REFERENCE: number;
  export let OBJECT_TYPE: number;
  export let OCCUPANCY_COUNT: number;
  export let OCCUPANCY_COUNT_ADJUST: number;
  export let OCCUPANCY_COUNT_ENABLE: number;
  export let OCCUPANCY_LOWER_LIMIT: number;
  export let OCCUPANCY_LOWER_LIMIT_ENFORCED: number;
  export let OCCUPANCY_STATE: number;
  export let OCCUPANCY_UPPER_LIMIT: number;
  export let OCCUPANCY_UPPER_LIMIT_ENFORCED: number;
  export let OPERATION_DIRECTION: number;
  export let OPERATION_EXPECTED: number;
  export let OPTIONAL: number;
  let OUT_OF_SERVICE_3: number;
  export { OUT_OF_SERVICE_3 as OUT_OF_SERVICE };
  export let OUTPUT_UNITS: number;
  export let PACKET_REORDER_TIME: number;
  export let PASSBACK_MODE: number;
  export let PASSBACK_TIMEOUT: number;
  export let PASSENGER_ALARM: number;
  export let POLARITY: number;
  export let PORT_FILTER: number;
  export let POSITIVE_ACCESS_RULES: number;
  export let POWER: number;
  export let POWER_MODE: number;
  export let PRESCALE: number;
  export let PRESENT_VALUE: number;
  export let PRIORITY: number;
  export let PRIORITY_ARRAY: number;
  export let PRIORITY_FOR_WRITING: number;
  export let PROCESS_IDENTIFIER: number;
  export let PROCESS_IDENTIFIER_FILTER: number;
  export let PROFILE_LOCATION: number;
  export let PROFILE_NAME: number;
  export let PROGRAM_CHANGE: number;
  export let PROGRAM_LOCATION: number;
  export let PROGRAM_STATE: number;
  export let PROPERTY_LIST: number;
  export let PROPORTIONAL_CONSTANT: number;
  export let PROPORTIONAL_CONSTANT_UNITS: number;
  export let PROTOCOL_LEVEL: number;
  export let PROTOCOL_OBJECT_TYPES_SUPPORTED: number;
  export let PROTOCOL_REVISION: number;
  export let PROTOCOL_SERVICES_SUPPORTED: number;
  export let PROTOCOL_VERSION: number;
  export let PULSE_RATE: number;
  export let READ_ONLY: number;
  export let REASON_FOR_DISABLE: number;
  export let REASON_FOR_HALT: number;
  export let RECIPIENT_LIST: number;
  export let RECORD_COUNT: number;
  export let RECORDS_SINCE_NOTIFICATION: number;
  export let REFERENCE_PORT: number;
  export let REGISTERED_CAR_CALL: number;
  export let RELIABILITY: number;
  export let RELIABILITY_EVALUATION_INHIBIT: number;
  export let RELINQUISH_DEFAULT: number;
  export let REPRESENTS: number;
  export let REQUESTED_SHED_LEVEL: number;
  export let REQUESTED_UPDATE_INTERVAL: number;
  export let REQUIRED: number;
  export let RESOLUTION: number;
  export let RESTART_NOTIFICATION_RECIPIENTS: number;
  export let RESTORE_COMPLETION_TIME: number;
  export let RESTORE_PREPARATION_TIME: number;
  export let ROUTING_TABLE: number;
  export let SCALE: number;
  export let SCALE_FACTOR: number;
  export let SCHEDULE_DEFAULT: number;
  export let SECURED_STATUS: number;
  export let SECURITY_PDU_TIMEOUT: number;
  export let SECURITY_TIME_WINDOW: number;
  export let SEGMENTATION_SUPPORTED: number;
  export let SERIAL_NUMBER: number;
  export let SETPOINT: number;
  export let SETPOINT_REFERENCE: number;
  export let SETTING: number;
  export let SHED_DURATION: number;
  export let SHED_LEVEL_DESCRIPTIONS: number;
  export let SHED_LEVELS: number;
  export let SILENCED: number;
  export let SLAVE_ADDRESS_BINDING: number;
  export let SLAVE_PROXY_ENABLE: number;
  export let START_TIME: number;
  export let STATE_CHANGE_VALUES: number;
  export let STATE_DESCRIPTION: number;
  export let STATE_TEXT: number;
  export let STATUS_FLAGS: number;
  export let STOP_TIME: number;
  export let STOP_WHEN_FULL: number;
  export let STRIKE_COUNT: number;
  export let STRUCTURED_OBJECT_LIST: number;
  export let SUBORDINATE_ANNOTATIONS: number;
  export let SUBORDINATE_LIST: number;
  export let SUBORDINATE_NODE_TYPES: number;
  export let SUBORDINATE_RELATIONSHIPS: number;
  export let SUBORDINATE_TAGS: number;
  export let SUBSCRIBED_RECIPIENTS: number;
  export let SUPPORTED_FORMAT_CLASSES: number;
  export let SUPPORTED_FORMATS: number;
  export let SUPPORTED_SECURITY_ALGORITHMS: number;
  export let SYSTEM_STATUS: number;
  export let TAGS: number;
  export let THREAT_AUTHORITY: number;
  export let THREAT_LEVEL: number;
  export let TIME_DELAY: number;
  export let TIME_DELAY_NORMAL: number;
  export let TIME_OF_ACTIVE_TIME_RESET: number;
  export let TIME_OF_DEVICE_RESTART: number;
  export let TIME_OF_STATE_COUNT_RESET: number;
  export let TIME_OF_STRIKE_COUNT_RESET: number;
  export let TIME_SYNCHRONIZATION_INTERVAL: number;
  export let TIME_SYNCHRONIZATION_RECIPIENTS: number;
  export let TIMER_RUNNING: number;
  export let TIMER_STATE: number;
  export let TOTAL_RECORD_COUNT: number;
  export let TRACE_FLAG: number;
  export let TRACKING_VALUE: number;
  export let TRANSACTION_NOTIFICATION_CLASS: number;
  export let TRANSITION: number;
  export let TRIGGER: number;
  export let UNITS: number;
  export let UPDATE_INTERVAL: number;
  export let UPDATE_KEY_SET_TIMEOUT: number;
  export let UPDATE_TIME: number;
  export let USER_EXTERNAL_IDENTIFIER: number;
  export let USER_INFORMATION_REFERENCE: number;
  export let USER_NAME: number;
  export let USER_TYPE: number;
  export let USES_REMAINING: number;
  export let UTC_OFFSET: number;
  export let UTC_TIME_SYNCHRONIZATION_RECIPIENTS: number;
  export let VALID_SAMPLES: number;
  export let VALUE_BEFORE_CHANGE: number;
  export let VALUE_CHANGE_TIME: number;
  export let VALUE_SET: number;
  export let VALUE_SOURCE: number;
  export let VALUE_SOURCE_ARRAY: number;
  export let VARIANCE_VALUE: number;
  export let VENDOR_IDENTIFIER: number;
  export let VENDOR_NAME: number;
  export let VERIFICATION_TIME: number;
  export let VIRTUAL_MAC_ADDRESS_TABLE: number;
  export let VT_CLASSES_SUPPORTED: number;
  export let WEEKLY_SCHEDULE: number;
  export let WINDOW_INTERVAL: number;
  export let WINDOW_SAMPLES: number;
  export let WRITE_STATUS: number;
  export let ZONE_FROM: number;
  export let ZONE_MEMBERS: number;
  export let ZONE_TO: number;
}
export const PropertyIdentifierName: any;
export namespace ProtocolLevel {
  export let PHYSICAL: number;
  let PROTOCOL_1: number;
  export { PROTOCOL_1 as PROTOCOL };
  export let BACNET_APPLICATION: number;
  export let NON_BACNET_APPLICATION: number;
}
export const ProtocolLevelName: any;
export namespace Relationship {
  let UNKNOWN_11: number;
  export { UNKNOWN_11 as UNKNOWN };
  let DEFAULT_1: number;
  export { DEFAULT_1 as DEFAULT };
  export let CONTAINS: number;
  export let CONTAINED_BY: number;
  export let USES: number;
  export let USED_BY: number;
  export let COMMANDS: number;
  export let COMMANDED_BY: number;
  export let ADJUSTS: number;
  export let ADJUSTED_BY: number;
  export let INGRESS: number;
  export let EGRESS: number;
  export let SUPPLIES_AIR: number;
  export let RECEIVES_AIR: number;
  export let SUPPLIES_HOT_AIR: number;
  export let RECEIVES_HOT_AIR: number;
  export let SUPPLIES_COOL_AIR: number;
  export let RECEIVES_COOL_AIR: number;
  export let SUPPLIES_POWER: number;
  export let RECEIVES_POWER: number;
  export let SUPPLIES_GAS: number;
  export let RECEIVES_GAS: number;
  export let SUPPLIES_WATER: number;
  export let RECEIVES_WATER: number;
  export let SUPPLIES_HOT_WATER: number;
  export let RECEIVES_HOT_WATER: number;
  export let SUPPLIES_COOL_WATER: number;
  export let RECEIVES_COOL_WATER: number;
  export let SUPPLIES_STEAM: number;
  export let RECEIVES_STEAM: number;
}
export const RelationshipName: any;
export namespace Reliability {
  let NO_FAULT_DETECTED: number;
  let NO_SENSOR: number;
  let OVER_RANGE: number;
  let UNDER_RANGE: number;
  let OPEN_LOOP: number;
  let SHORTED_LOOP: number;
  let NO_OUTPUT: number;
  let UNRELIABLE_OTHER: number;
  let PROCESS_ERROR: number;
  let MULTI_STATE_FAULT: number;
  let CONFIGURATION_ERROR: number;
  let COMMUNICATION_FAILURE: number;
  let MEMBER_FAULT: number;
  let MONITORED_OBJECT_FAULT: number;
  let TRIPPED: number;
  let LAMP_FAILURE: number;
  let ACTIVATION_FAILURE: number;
  let RENEW_DHCP_FAILURE: number;
  let RENEW_FD_REGISTRATION_FAILURE: number;
  let RESTART_AUTO_NEGOTIATION_FAILURE: number;
  let RESTART_FAILURE: number;
  let PROPRIETARY_COMMAND_FAILURE: number;
  let FAULTS_LISTED: number;
  let REFERENCED_OBJECT_FAULT: number;
}
export const ReliabilityName: any;
export namespace RestartReason {
  let UNKNOWN_12: number;
  export { UNKNOWN_12 as UNKNOWN };
  export let COLDSTART: number;
  export let WARMSTART: number;
  export let DETECTED_POWER_LOST: number;
  export let DETECTED_POWERED_OFF: number;
  export let HARDWARE_WATCHDOG: number;
  export let SOFTWARE_WATCHDOG: number;
  export let SUSPENDED: number;
  export let ACTIVATE_CHANGES: number;
}
export namespace SecurityLevel {
  let INCAPABLE: number;
  let PLAIN: number;
  let SIGNED: number;
  let ENCRYPTED: number;
  let SIGNED_END_TO_END: number;
  let ENCRYPTED_END_TO_END: number;
}
export namespace SecurityPolicy {
  let PLAIN_NON_TRUSTED: number;
  let PLAIN_TRUSTED: number;
  let SIGNED_TRUSTED: number;
  let ENCRYPTED_TRUSTED: number;
}
export const SecurityPolicyName: any;
export namespace Segmentation {
  let SEGMENTED_BOTH: number;
  let SEGMENTED_TRANSMIT: number;
  let SEGMENTED_RECEIVE: number;
  let NO_SEGMENTATION: number;
}
export const SegmentationName: any;
export namespace ShedState {
  let SHED_INACTIVE: number;
  let SHED_REQUEST_PENDING: number;
  let SHED_COMPLIANT: number;
  let SHED_NON_COMPLIANT: number;
}
export const ShedStateName: any;
export namespace SilencedState {
  let UNSILENCED: number;
  let AUDIBLE_SILENCED: number;
  let VISIBLE_SILENCED: number;
  let ALL_SILENCED: number;
}
export const SilencedStateName: any;
export namespace TimerState {
  let IDLE_4: number;
  export { IDLE_4 as IDLE };
  let RUNNING_1: number;
  export { RUNNING_1 as RUNNING };
  export let EXPIRED: number;
}
export const TimerStateName: any;
export namespace TimerTransition {
  let NONE_13: number;
  export { NONE_13 as NONE };
  export let IDLE_TO_RUNNING: number;
  export let RUNNING_TO_IDLE: number;
  export let RUNNING_TO_RUNNING: number;
  export let RUNNING_TO_EXPIRED: number;
  export let FORCED_TO_EXPIRED: number;
  export let EXPIRED_TO_IDLE: number;
  export let EXPIRED_TO_RUNNING: number;
}
export const TimerTransitionName: any;
export namespace VTClass {
  let DEFAULT_TERMINAL: number;
  let ANSI_X3_64: number;
  let DEC_VT52: number;
  let DEC_VT100: number;
  let DEC_VT220: number;
  let HP_700_94: number;
  let IBM_3130: number;
}
export const VTClassName: any;
export namespace WriteStatus {
  let IDLE_5: number;
  export { IDLE_5 as IDLE };
  let IN_PROGRESS_2: number;
  export { IN_PROGRESS_2 as IN_PROGRESS };
  export let SUCCESSFUL: number;
  export let FAILED: number;
}
export const WriteStatusName: any;
export namespace DaysOfWeek {
  let MONDAY: number;
  let TUESDAY: number;
  let WEDNESDAY: number;
  let THURSDAY: number;
  let FRIDAY: number;
  let SATURDAY: number;
  let SUNDAY: number;
}
export const DaysOfWeekName: any;
export namespace EventTransitionBits {
  let TO_OFFNORMAL: number;
  let TO_FAULT: number;
  let TO_NORMAL: number;
}
export const EventTransitionBitsName: any;
export namespace LimitEnable {
  let LOW_LIMIT_ENABLE: number;
  let HIGH_LIMIT_ENABLE: number;
}
export const LimitEnableName: any;
export namespace LogStatus {
  let LOG_DISABLED: number;
  let BUFFER_PURGED: number;
  let LOG_INTERRUPTED: number;
}
export const LogStatusName: any;
export namespace ObjectTypesSupported {
  let ANALOG_INPUT_1: number;
  export { ANALOG_INPUT_1 as ANALOG_INPUT };
  let ANALOG_OUTPUT_1: number;
  export { ANALOG_OUTPUT_1 as ANALOG_OUTPUT };
  let ANALOG_VALUE_1: number;
  export { ANALOG_VALUE_1 as ANALOG_VALUE };
  let BINARY_INPUT_1: number;
  export { BINARY_INPUT_1 as BINARY_INPUT };
  let BINARY_OUTPUT_1: number;
  export { BINARY_OUTPUT_1 as BINARY_OUTPUT };
  let BINARY_VALUE_1: number;
  export { BINARY_VALUE_1 as BINARY_VALUE };
  let CALENDAR_1: number;
  export { CALENDAR_1 as CALENDAR };
  let COMMAND_2: number;
  export { COMMAND_2 as COMMAND };
  let DEVICE_3: number;
  export { DEVICE_3 as DEVICE };
  let EVENT_ENROLLMENT_1: number;
  export { EVENT_ENROLLMENT_1 as EVENT_ENROLLMENT };
  let FILE_1: number;
  export { FILE_1 as FILE };
  let GROUP_2: number;
  export { GROUP_2 as GROUP };
  let LOOP_1: number;
  export { LOOP_1 as LOOP };
  let MULTI_STATE_INPUT_1: number;
  export { MULTI_STATE_INPUT_1 as MULTI_STATE_INPUT };
  let MULTI_STATE_OUTPUT_1: number;
  export { MULTI_STATE_OUTPUT_1 as MULTI_STATE_OUTPUT };
  let NOTIFICATION_CLASS_2: number;
  export { NOTIFICATION_CLASS_2 as NOTIFICATION_CLASS };
  let PROGRAM_2: number;
  export { PROGRAM_2 as PROGRAM };
  let SCHEDULE_1: number;
  export { SCHEDULE_1 as SCHEDULE };
  let AVERAGING_1: number;
  export { AVERAGING_1 as AVERAGING };
  let MULTI_STATE_VALUE_1: number;
  export { MULTI_STATE_VALUE_1 as MULTI_STATE_VALUE };
  let TREND_LOG_1: number;
  export { TREND_LOG_1 as TREND_LOG };
  let LIFE_SAFETY_POINT_1: number;
  export { LIFE_SAFETY_POINT_1 as LIFE_SAFETY_POINT };
  let LIFE_SAFETY_ZONE_1: number;
  export { LIFE_SAFETY_ZONE_1 as LIFE_SAFETY_ZONE };
  let ACCUMULATOR_1: number;
  export { ACCUMULATOR_1 as ACCUMULATOR };
  let PULSE_CONVERTER_1: number;
  export { PULSE_CONVERTER_1 as PULSE_CONVERTER };
  let EVENT_LOG_1: number;
  export { EVENT_LOG_1 as EVENT_LOG };
  let GLOBAL_GROUP_1: number;
  export { GLOBAL_GROUP_1 as GLOBAL_GROUP };
  let TREND_LOG_MULTIPLE_1: number;
  export { TREND_LOG_MULTIPLE_1 as TREND_LOG_MULTIPLE };
  let LOAD_CONTROL_1: number;
  export { LOAD_CONTROL_1 as LOAD_CONTROL };
  let STRUCTURED_VIEW_1: number;
  export { STRUCTURED_VIEW_1 as STRUCTURED_VIEW };
  let ACCESS_DOOR_1: number;
  export { ACCESS_DOOR_1 as ACCESS_DOOR };
  let TIMER_1: number;
  export { TIMER_1 as TIMER };
  let ACCESS_CREDENTIAL_1: number;
  export { ACCESS_CREDENTIAL_1 as ACCESS_CREDENTIAL };
  let ACCESS_POINT_1: number;
  export { ACCESS_POINT_1 as ACCESS_POINT };
  let ACCESS_RIGHTS_2: number;
  export { ACCESS_RIGHTS_2 as ACCESS_RIGHTS };
  let ACCESS_USER_1: number;
  export { ACCESS_USER_1 as ACCESS_USER };
  let ACCESS_ZONE_1: number;
  export { ACCESS_ZONE_1 as ACCESS_ZONE };
  let CREDENTIAL_DATA_INPUT_1: number;
  export { CREDENTIAL_DATA_INPUT_1 as CREDENTIAL_DATA_INPUT };
  let NETWORK_SECURITY_1: number;
  export { NETWORK_SECURITY_1 as NETWORK_SECURITY };
  let BITSTRING_VALUE_1: number;
  export { BITSTRING_VALUE_1 as BITSTRING_VALUE };
  let CHARACTERSTRING_VALUE_1: number;
  export { CHARACTERSTRING_VALUE_1 as CHARACTERSTRING_VALUE };
  let DATEPATTERN_VALUE_1: number;
  export { DATEPATTERN_VALUE_1 as DATEPATTERN_VALUE };
  let DATE_VALUE_1: number;
  export { DATE_VALUE_1 as DATE_VALUE };
  let DATETIMEPATTERN_VALUE_1: number;
  export { DATETIMEPATTERN_VALUE_1 as DATETIMEPATTERN_VALUE };
  let DATETIME_VALUE_1: number;
  export { DATETIME_VALUE_1 as DATETIME_VALUE };
  let INTEGER_VALUE_1: number;
  export { INTEGER_VALUE_1 as INTEGER_VALUE };
  let LARGE_ANALOG_VALUE_1: number;
  export { LARGE_ANALOG_VALUE_1 as LARGE_ANALOG_VALUE };
  let OCTETSTRING_VALUE_1: number;
  export { OCTETSTRING_VALUE_1 as OCTETSTRING_VALUE };
  let POSITIVE_INTEGER_VALUE_1: number;
  export { POSITIVE_INTEGER_VALUE_1 as POSITIVE_INTEGER_VALUE };
  let TIMEPATTERN_VALUE_1: number;
  export { TIMEPATTERN_VALUE_1 as TIMEPATTERN_VALUE };
  let TIME_VALUE_1: number;
  export { TIME_VALUE_1 as TIME_VALUE };
  let NOTIFICATION_FORWARDER_1: number;
  export { NOTIFICATION_FORWARDER_1 as NOTIFICATION_FORWARDER };
  let ALERT_ENROLLMENT_1: number;
  export { ALERT_ENROLLMENT_1 as ALERT_ENROLLMENT };
  let CHANNEL_1: number;
  export { CHANNEL_1 as CHANNEL };
  let LIGHTING_OUTPUT_1: number;
  export { LIGHTING_OUTPUT_1 as LIGHTING_OUTPUT };
  let BINARY_LIGHTING_OUTPUT_1: number;
  export { BINARY_LIGHTING_OUTPUT_1 as BINARY_LIGHTING_OUTPUT };
  let NETWORK_PORT_1: number;
  export { NETWORK_PORT_1 as NETWORK_PORT };
  let ELEVATOR_GROUP_2: number;
  export { ELEVATOR_GROUP_2 as ELEVATOR_GROUP };
  let ESCALATOR_1: number;
  export { ESCALATOR_1 as ESCALATOR };
  let LIFT_1: number;
  export { LIFT_1 as LIFT };
}
export const ObjectTypesSupportedName: any;
export namespace ResultFlags {
  let FIRST_ITEM: number;
  let LAST_ITEM: number;
  let MORE_ITEMS: number;
}
export const ResultFlagsName: any;
export namespace ServicesSupported {
  let ACKNOWLEDGE_ALARM_1: number;
  export { ACKNOWLEDGE_ALARM_1 as ACKNOWLEDGE_ALARM };
  let CONFIRMED_COV_NOTIFICATION_1: number;
  export { CONFIRMED_COV_NOTIFICATION_1 as CONFIRMED_COV_NOTIFICATION };
  let CONFIRMED_EVENT_NOTIFICATION_1: number;
  export { CONFIRMED_EVENT_NOTIFICATION_1 as CONFIRMED_EVENT_NOTIFICATION };
  let GET_ALARM_SUMMARY_1: number;
  export { GET_ALARM_SUMMARY_1 as GET_ALARM_SUMMARY };
  let GET_ENROLLMENT_SUMMARY_1: number;
  export { GET_ENROLLMENT_SUMMARY_1 as GET_ENROLLMENT_SUMMARY };
  let SUBSCRIBE_COV_1: number;
  export { SUBSCRIBE_COV_1 as SUBSCRIBE_COV };
  let ATOMIC_READ_FILE_1: number;
  export { ATOMIC_READ_FILE_1 as ATOMIC_READ_FILE };
  let ATOMIC_WRITE_FILE_1: number;
  export { ATOMIC_WRITE_FILE_1 as ATOMIC_WRITE_FILE };
  let ADD_LIST_ELEMENT_1: number;
  export { ADD_LIST_ELEMENT_1 as ADD_LIST_ELEMENT };
  let REMOVE_LIST_ELEMENT_1: number;
  export { REMOVE_LIST_ELEMENT_1 as REMOVE_LIST_ELEMENT };
  let CREATE_OBJECT_1: number;
  export { CREATE_OBJECT_1 as CREATE_OBJECT };
  let DELETE_OBJECT_1: number;
  export { DELETE_OBJECT_1 as DELETE_OBJECT };
  let READ_PROPERTY_1: number;
  export { READ_PROPERTY_1 as READ_PROPERTY };
  let READ_PROPERTY_MULTIPLE_1: number;
  export { READ_PROPERTY_MULTIPLE_1 as READ_PROPERTY_MULTIPLE };
  let WRITE_PROPERTY_1: number;
  export { WRITE_PROPERTY_1 as WRITE_PROPERTY };
  let WRITE_PROPERTY_MULTIPLE_1: number;
  export { WRITE_PROPERTY_MULTIPLE_1 as WRITE_PROPERTY_MULTIPLE };
  let DEVICE_COMMUNICATION_CONTROL_1: number;
  export { DEVICE_COMMUNICATION_CONTROL_1 as DEVICE_COMMUNICATION_CONTROL };
  let CONFIRMED_PRIVATE_TRANSFER_1: number;
  export { CONFIRMED_PRIVATE_TRANSFER_1 as CONFIRMED_PRIVATE_TRANSFER };
  let CONFIRMED_TEXT_MESSAGE_1: number;
  export { CONFIRMED_TEXT_MESSAGE_1 as CONFIRMED_TEXT_MESSAGE };
  let REINITIALIZE_DEVICE_1: number;
  export { REINITIALIZE_DEVICE_1 as REINITIALIZE_DEVICE };
  let VT_OPEN_1: number;
  export { VT_OPEN_1 as VT_OPEN };
  let VT_CLOSE_1: number;
  export { VT_CLOSE_1 as VT_CLOSE };
  let VT_DATA_1: number;
  export { VT_DATA_1 as VT_DATA };
  export let READ_PROPERTY_CONDITIONAL: number;
  export let AUTHENTICATE: number;
  export let REQUEST_KEY: number;
  let I_AM_1: number;
  export { I_AM_1 as I_AM };
  let I_HAVE_1: number;
  export { I_HAVE_1 as I_HAVE };
  let UNCONFIRMED_COV_NOTIFICATION_1: number;
  export { UNCONFIRMED_COV_NOTIFICATION_1 as UNCONFIRMED_COV_NOTIFICATION };
  let UNCONFIRMED_EVENT_NOTIFICATION_1: number;
  export { UNCONFIRMED_EVENT_NOTIFICATION_1 as UNCONFIRMED_EVENT_NOTIFICATION };
  let UNCONFIRMED_PRIVATE_TRANSFER_1: number;
  export { UNCONFIRMED_PRIVATE_TRANSFER_1 as UNCONFIRMED_PRIVATE_TRANSFER };
  let UNCONFIRMED_TEXT_MESSAGE_1: number;
  export { UNCONFIRMED_TEXT_MESSAGE_1 as UNCONFIRMED_TEXT_MESSAGE };
  let TIME_SYNCHRONIZATION_1: number;
  export { TIME_SYNCHRONIZATION_1 as TIME_SYNCHRONIZATION };
  let WHO_HAS_1: number;
  export { WHO_HAS_1 as WHO_HAS };
  let WHO_IS_1: number;
  export { WHO_IS_1 as WHO_IS };
  let READ_RANGE_1: number;
  export { READ_RANGE_1 as READ_RANGE };
  let UTC_TIME_SYNCHRONIZATION_1: number;
  export { UTC_TIME_SYNCHRONIZATION_1 as UTC_TIME_SYNCHRONIZATION };
  let LIFE_SAFETY_OPERATION_1: number;
  export { LIFE_SAFETY_OPERATION_1 as LIFE_SAFETY_OPERATION };
  let SUBSCRIBE_COV_PROPERTY_1: number;
  export { SUBSCRIBE_COV_PROPERTY_1 as SUBSCRIBE_COV_PROPERTY };
  let GET_EVENT_INFORMATION_1: number;
  export { GET_EVENT_INFORMATION_1 as GET_EVENT_INFORMATION };
  let WRITE_GROUP_1: number;
  export { WRITE_GROUP_1 as WRITE_GROUP };
  let SUBSCRIBE_COV_PROPERTY_MULTIPLE_1: number;
  export { SUBSCRIBE_COV_PROPERTY_MULTIPLE_1 as SUBSCRIBE_COV_PROPERTY_MULTIPLE };
  let CONFIRMED_COV_NOTIFICATION_MULTIPLE_1: number;
  export { CONFIRMED_COV_NOTIFICATION_MULTIPLE_1 as CONFIRMED_COV_NOTIFICATION_MULTIPLE };
  let UNCONFIRMED_COV_NOTIFICATION_MULTIPLE_1: number;
  export { UNCONFIRMED_COV_NOTIFICATION_MULTIPLE_1 as UNCONFIRMED_COV_NOTIFICATION_MULTIPLE };
}
export const ServicesSupportedName: any;
export namespace StatusFlags {
  export let IN_ALARM: number;
  let FAULT_2: number;
  export { FAULT_2 as FAULT };
  export let OVERRIDDEN: number;
  let OUT_OF_SERVICE_4: number;
  export { OUT_OF_SERVICE_4 as OUT_OF_SERVICE };
}
export const StatusFlagsName: any;
export namespace ApplicationTag {
  export let NULL: number;
  export let BOOLEAN: number;
  export let UNSIGNED_INTEGER: number;
  export let SIGNED_INTEGER: number;
  export let REAL: number;
  export let DOUBLE: number;
  export let OCTET_STRING: number;
  export let CHARACTER_STRING: number;
  export let BIT_STRING: number;
  export let ENUMERATED: number;
  export let DATE: number;
  export let TIME: number;
  export let OBJECTIDENTIFIER: number;
  export let EMPTYLIST: number;
  export let WEEKNDAY: number;
  export let DATERANGE: number;
  export let DATETIME: number;
  export let TIMESTAMP: number;
  let ERROR_1: number;
  export { ERROR_1 as ERROR };
  export let DEVICE_OBJECT_PROPERTY_REFERENCE: number;
  export let DEVICE_OBJECT_REFERENCE: number;
  let OBJECT_PROPERTY_REFERENCE_1: number;
  export { OBJECT_PROPERTY_REFERENCE_1 as OBJECT_PROPERTY_REFERENCE };
  export let DESTINATION: number;
  export let RECIPIENT: number;
  export let COV_SUBSCRIPTION: number;
  export let CALENDAR_ENTRY: number;
  let WEEKLY_SCHEDULE_1: number;
  export { WEEKLY_SCHEDULE_1 as WEEKLY_SCHEDULE };
  export let SPECIAL_EVENT: number;
  export let READ_ACCESS_SPECIFICATION: number;
  export let READ_ACCESS_RESULT: number;
  let LIGHTING_COMMAND_1: number;
  export { LIGHTING_COMMAND_1 as LIGHTING_COMMAND };
  export let CONTEXT_SPECIFIC_DECODED: number;
  export let CONTEXT_SPECIFIC_ENCODED: number;
  export let LOG_RECORD: number;
}
export type ApplicationTag = {
  NULL: 0;
  BOOLEAN: 1;
  UNSIGNED_INTEGER: 2;
  SIGNED_INTEGER: 3;
  REAL: 4;
  DOUBLE: 5;
  OCTET_STRING: 6;
  CHARACTER_STRING: 7;
  BIT_STRING: 8;
  ENUMERATED: 9;
  DATE: 10;
  TIME: 11;
  OBJECTIDENTIFIER: 12;
  // Application Tags - Internal
  EMPTYLIST: 100;
  WEEKNDAY: 101;
  DATERANGE: 102;
  DATETIME: 103;
  TIMESTAMP: 104;
  ERROR: 105;
  DEVICE_OBJECT_PROPERTY_REFERENCE: 106;
  DEVICE_OBJECT_REFERENCE: 107;
  OBJECT_PROPERTY_REFERENCE: 108;
  DESTINATION: 109;
  RECIPIENT: 110;
  COV_SUBSCRIPTION: 111;
  CALENDAR_ENTRY: 112;
  WEEKLY_SCHEDULE: 113;
  SPECIAL_EVENT: 114;
  READ_ACCESS_SPECIFICATION: 115;
  READ_ACCESS_RESULT: 116;
  LIGHTING_COMMAND: 117;
  CONTEXT_SPECIFIC_DECODED: 118;
  CONTEXT_SPECIFIC_ENCODED: 119;
  LOG_RECORD: 120;
};
export const ApplicationTagName: any;
export namespace BvlcResultFormat {
  let SUCCESSFUL_COMPLETION: number;
  let WRITE_BROADCAST_DISTRIBUTION_TABLE_NAK: number;
  let READ_BROADCAST_DISTRIBUTION_TABLE_NAK: number;
  let REGISTER_FOREIGN_DEVICE_NAK: number;
  let READ_FOREIGN_DEVICE_TABLE_NAK: number;
  let DELETE_FOREIGN_DEVICE_TABLE_ENTRY_NAK: number;
  let DISTRIBUTE_BROADCAST_TO_NETWORK_NAK: number;
}
export const BvlcResultFormatName: any;
export namespace BvlcResultPurpose {
  let BVLC_RESULT: number;
  let WRITE_BROADCAST_DISTRIBUTION_TABLE: number;
  let READ_BROADCAST_DISTRIBUTION_TABLE: number;
  let READ_BROADCAST_DISTRIBUTION_TABLE_ACK: number;
  let FORWARDED_NPDU: number;
  let REGISTER_FOREIGN_DEVICE: number;
  let READ_FOREIGN_DEVICE_TABLE: number;
  let READ_FOREIGN_DEVICE_TABLE_ACK: number;
  let DELETE_FOREIGN_DEVICE_TABLE_ENTRY: number;
  let DISTRIBUTE_BROADCAST_TO_NETWORK: number;
  let ORIGINAL_UNICAST_NPDU: number;
  let ORIGINAL_BROADCAST_NPDU: number;
  let SECURE_BVLL: number;
}
export const BvlcResultPurposeName: any;
export namespace CharacterStringEncoding {
  let UTF_8: number;
  let MICROSOFT_DBCS: number;
  let JIS_X_0208: number;
  let UCS_4: number;
  let UCS_2: number;
  let ISO_8859_1: number;
}
export const CharacterStringEncodingName: any;
export namespace CovType {
  let REAL_1: number;
  export { REAL_1 as REAL };
  let BIT_STRING_1: number;
  export { BIT_STRING_1 as BIT_STRING };
}
export const CovTypeName: any;
export namespace EnableDisable {
  let ENABLE_1: number;
  export { ENABLE_1 as ENABLE };
  let DISABLE_1: number;
  export { DISABLE_1 as DISABLE };
  export let DISABLE_INITIATION: number;
}
export type EnableDisable = {
  ENABLE: 0;
  DISABLE: 1;
  DISABLE_INITIATION: 2;
};

export const EnableDisableName: any;
export namespace MaxApduLengthAccepted {
  let OCTETS_50: number;
  let OCTETS_128: number;
  let OCTETS_206: number;
  let OCTETS_480: number;
  let OCTETS_1024: number;
  let OCTETS_1476: number;
}
export type MaxApduLengthAccepted = {
  OCTETS_50: 0b0000;
  OCTETS_128: 0b0001;
  OCTETS_206: 0b0010;
  OCTETS_480: 0b0011;
  OCTETS_1024: 0b0100;
  OCTETS_1476: 0b0101;
};
export const MaxApduLengthAcceptedName: any;
export namespace MaxSegmentsAccepted {
  let SEGMENTS_0: number;
  let SEGMENTS_2: number;
  let SEGMENTS_4: number;
  let SEGMENTS_8: number;
  let SEGMENTS_16: number;
  let SEGMENTS_32: number;
  let SEGMENTS_64: number;
  let SEGMENTS_65: number;
}
export type MaxSegmentsAccepted = {
  SEGMENTS_0: number;
  SEGMENTS_2: number;
  SEGMENTS_4: number;
  SEGMENTS_8: number;
  SEGMENTS_16: number;
  SEGMENTS_32: number;
  SEGMENTS_64: number;
  SEGMENTS_65: number;
};

export const MaxSegmentsAcceptedName: any;
export namespace NetworkLayerMessageType {
  let WHO_IS_ROUTER_TO_NETWORK: number;
  let I_AM_ROUTER_TO_NETWORK: number;
  let I_COULD_BE_ROUTER_TO_NETWORK: number;
  let REJECT_MESSAGE_TO_NETWORK: number;
  let ROUTER_BUSY_TO_NETWORK: number;
  let ROUTER_AVAILABLE_TO_NETWORK: number;
  let INITIALIZE_ROUTING_TABLE: number;
  let INITIALIZE_ROUTING_TABLE_ACK: number;
  let ESTABLISH_CONNECTION_TO_NETWORK: number;
  let DISCONNECT_CONNECTION_TO_NETWORK: number;
  let CHALLENGE_REQUEST: number;
  let SECURITY_PAYLOAD: number;
  let SECURITY_RESPONSE: number;
  let REQUEST_KEY_UPDATE: number;
  let UPDATE_KEY_SET: number;
  let UPDATE_DISTRIBUTION_KEY: number;
  let REQUEST_MASTER_KEY: number;
  let SET_MASTER_KEY: number;
  let WHAT_IS_NETWORK_NUMBER: number;
  let NETWORK_NUMBER_IS: number;
}
export const NetworkLayerMessageTypeName: any;
export namespace NpduControlBit {
  let EXPECTING_REPLY: number;
  let SOURCE_SPECIFIED: number;
  let DESTINATION_SPECIFIED: number;
  let NETWORK_LAYER_MESSAGE: number;
}
export const NpduControlBitName: any;
export namespace NpduControlPriority {
  let NORMAL_MESSAGE: number;
  let URGENT_MESSAGE: number;
  let CRITICAL_EQUIPMENT_MESSAGE: number;
  let LIFE_SAFETY_MESSAGE: number;
}
export const NpduControlPriorityName: any;
export namespace PduConReqBit {
  let SEGMENTED_RESPONSE_ACCEPTED: number;
  let MORE_FOLLOWS: number;
  let SEGMENTED_MESSAGE: number;
}
export const PduConReqBitName: any;
export namespace PduSegAckBit {
  let SERVER: number;
  let NEGATIVE_ACK: number;
}
export const PduSegAckBitName: any;
export namespace PduType {
  export let CONFIRMED_REQUEST: number;
  export let UNCONFIRMED_REQUEST: number;
  export let SIMPLE_ACK: number;
  export let COMPLEX_ACK: number;
  export let SEGMENT_ACK: number;
  let ERROR_2: number;
  export { ERROR_2 as ERROR };
  export let REJECT: number;
  export let ABORT: number;
}
export const PduTypeName: any;
export namespace PropertyStates {
  export let BOOLEAN_VALUE: number;
  let BINARY_VALUE_2: number;
  export { BINARY_VALUE_2 as BINARY_VALUE };
  let EVENT_TYPE_1: number;
  export { EVENT_TYPE_1 as EVENT_TYPE };
  let POLARITY_1: number;
  export { POLARITY_1 as POLARITY };
  let PROGRAM_CHANGE_1: number;
  export { PROGRAM_CHANGE_1 as PROGRAM_CHANGE };
  let PROGRAM_STATE_1: number;
  export { PROGRAM_STATE_1 as PROGRAM_STATE };
  let REASON_FOR_HALT_1: number;
  export { REASON_FOR_HALT_1 as REASON_FOR_HALT };
  let RELIABILITY_1: number;
  export { RELIABILITY_1 as RELIABILITY };
  export let STATE: number;
  let SYSTEM_STATUS_1: number;
  export { SYSTEM_STATUS_1 as SYSTEM_STATUS };
  let UNITS_1: number;
  export { UNITS_1 as UNITS };
  export let UNSIGNED_VALUE: number;
  export let LIFE_SAFETY_MODE: number;
  export let LIFE_SAFETY_STATE: number;
  export let RESTART_REASON: number;
  let DOOR_ALARM_STATE_1: number;
  export { DOOR_ALARM_STATE_1 as DOOR_ALARM_STATE };
  let ACTION_1: number;
  export { ACTION_1 as ACTION };
  export let DOOR_SECURED_STATUS: number;
  let DOOR_STATUS_1: number;
  export { DOOR_STATUS_1 as DOOR_STATUS };
  export let DOOR_VALUE: number;
  let FILE_ACCESS_METHOD_1: number;
  export { FILE_ACCESS_METHOD_1 as FILE_ACCESS_METHOD };
  let LOCK_STATUS_1: number;
  export { LOCK_STATUS_1 as LOCK_STATUS };
  let LIFE_SAFETY_OPERATION_2: number;
  export { LIFE_SAFETY_OPERATION_2 as LIFE_SAFETY_OPERATION };
  export let MAINTENANCE: number;
  let NODE_TYPE_1: number;
  export { NODE_TYPE_1 as NODE_TYPE };
  let NOTIFY_TYPE_1: number;
  export { NOTIFY_TYPE_1 as NOTIFY_TYPE };
  export let SECURITY_LEVEL: number;
  export let SHED_STATE: number;
  export let SILENCED_STATE: number;
  let ACCESS_EVENT_2: number;
  export { ACCESS_EVENT_2 as ACCESS_EVENT };
  export let ZONE_OCCUPANCY_STATE: number;
  export let ACCESS_CREDENTIAL_DISABLE_REASON: number;
  export let ACCESS_CREDENTIAL_DISABLE: number;
  let AUTHENTICATION_STATUS_1: number;
  export { AUTHENTICATION_STATUS_1 as AUTHENTICATION_STATUS };
  export let BACKUP_STATE: number;
  let WRITE_STATUS_1: number;
  export { WRITE_STATUS_1 as WRITE_STATUS };
  export let LIGHTING_IN_PROGRESS: number;
  export let LIGHTING_OPERATION: number;
  export let LIGHTING_TRANSITION: number;
  let INTEGER_VALUE_2: number;
  export { INTEGER_VALUE_2 as INTEGER_VALUE };
  export let BINARY_LIGHTING_VALUE: number;
  let TIMER_STATE_1: number;
  export { TIMER_STATE_1 as TIMER_STATE };
  export let TIMER_TRANSITION: number;
  let BACNET_IP_MODE_1: number;
  export { BACNET_IP_MODE_1 as BACNET_IP_MODE };
  export let NETWORK_PORT_COMMAND: number;
  let NETWORK_TYPE_1: number;
  export { NETWORK_TYPE_1 as NETWORK_TYPE };
  let NETWORK_NUMBER_QUALITY_1: number;
  export { NETWORK_NUMBER_QUALITY_1 as NETWORK_NUMBER_QUALITY };
  export let ESCALATOR_OPERATION_DIRECTION: number;
  export let ESCALATOR_FAULT: number;
  let ESCALATOR_MODE_1: number;
  export { ESCALATOR_MODE_1 as ESCALATOR_MODE };
  export let LIFT_CAR_DIRECTION: number;
  export let LIFT_CAR_DOOR_COMMAND: number;
  export let LIFT_CAR_DRIVE_STATUS: number;
  export let LIFT_CAR_MODE: number;
  export let LIFT_GROUP_MODE: number;
  export let LIFT_FAULT: number;
  let PROTOCOL_LEVEL_1: number;
  export { PROTOCOL_LEVEL_1 as PROTOCOL_LEVEL };
  export let EXTENDED_VALUE: number;
}
export const PropertyStatesName: any;
export namespace ReadRangeType {
  let BY_POSITION: number;
  let BY_SEQUENCE_NUMBER: number;
  let BY_TIME_REFERENCE_TIME_COUNT: number;
}
export const ReadRangeTypeName: any;
export namespace ReinitializedState {
  let COLDSTART_1: number;
  export { COLDSTART_1 as COLDSTART };
  let WARMSTART_1: number;
  export { WARMSTART_1 as WARMSTART };
  export let STARTBACKUP: number;
  export let ENDBACKUP: number;
  export let STARTRESTORE: number;
  export let ENDRESTORE: number;
  export let ABORTRESTORE: number;
  let ACTIVATE_CHANGES_1: number;
  export { ACTIVATE_CHANGES_1 as ACTIVATE_CHANGES };
}
export type ReinitializedState = {
    COLDSTART: 0,
    WARMSTART: 1,
    STARTBACKUP: 2,
    ENDBACKUP: 3,
    STARTRESTORE: 4,
    ENDRESTORE: 5,
    ABORTRESTORE: 6,
    ACTIVATE_CHANGES: 7
  };

export const ReinitializedStateName: any;
export namespace TimeStamp {
  let TIME_1: number;
  export { TIME_1 as TIME };
  export let SEQUENCE_NUMBER: number;
  let DATETIME_1: number;
  export { DATETIME_1 as DATETIME };
}
export const TimeStampName: any;
